
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/tutorials/03_statistics_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_tutorials_03_statistics_tutorial.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tutorials_03_statistics_tutorial.py:


.. _tut-statistics:

Tutorial part 3: statistical analysis of group-level RSA results
----------------------------------------------------------------

In this tutorial, we'll dive into cluster-based permutation testing for group-level
statistical analysis.

The statistical test is described in `Maris & Oostenveld, 2007
<https://doi.org/10.1016/j.jneumeth.2007.03.024>`__. This functionality is not part of
the MNE-RSA package, but rather MNE-Python, but it is a large part of a proper RSA
analysis so I figures any decent RSA tutorial should cover this.

Cluster-based permutation testing is becoming the standard ‚Äúgo-to‚Äù method for testing
for significant differences between experimental conditions in MEG and EEG studies.
However, applying the technique correctly is not always straightforward and there are a
lot of caveats to beware of. On top of this, the API of MNE-Python regarding these tests
could use a bit more work. (If you are inspired by this tutorial, could you `lend a hand
<https://github.com/mne-tools/mne-python/issues/4859>`__ with this? ‚ù§)

The purpose of cluster-based permutation testing
------------------------------------------------

When exploring differences between conditions, a good first step is to perform separate
t-tests for each channel/sourcepoint/timepoint and visualize them. While this gives you
a good feel of where and when significant differences may occur, one cannot always make
solid statistical inferences based on these values. Cluster-based permutation testing is
designed to solve two problems that arise when using mass t-tests:

1. The multiple-comparisons problem: solved by using a cluster-based
   statistic
2. The non-Gaussian data problem: solved by using random permutations

The solutions to these problems come at a hefty price though: the test can only infer
the data is different between conditions. **The test can not be used to infer when and
where there is a significant difference.** Researchers get this wrong a lot. The
Fieldtrip manual even has a `dedicated page about this
<https://www.fieldtriptoolbox.org/faq/how_not_to_interpret_results_from_a_cluster-based_permutation_test>`__
which I encourage you to read.

Now that I‚Äôve scared you enough, let‚Äôs do this!

In the cell below, update the ``data_path`` variable to point to where you have
extracted the
```rsa-data.zip`` <https://github.com/wmvanvliet/neuroscience_tutorials/releases/download/2/rsa-data.zip>`__
file to.

.. GENERATED FROM PYTHON SOURCE LINES 49-59

.. code-block:: Python

    # ruff: noqa: E402
    # sphinx_gallery_thumbnail_number=2

    import mne

    mne.set_log_level("warning")  # Make the output less verbose

    # Set this to where you've extracted `rsa-data.zip` to
    data_path = "data"








.. GENERATED FROM PYTHON SOURCE LINES 60-75

Cluster permutation testing on a single channel
-----------------------------------------------

In the classic EEG event-related potential (ERP) literature, statistical
testing between two conditions was done by first identifying one or more
sensors and stretches of time that seem likely to hold a significant
difference, then averaging the signal across those sensors and time
region, followed by a single t-test or ANOVA test. Time would tell
whether the chosen channels and time region would replicate across
studies.

Let‚Äôs do this for our sensor-level RSA result that we obtained in
:ref:`tut-sensor-level`. I‚Äôve ran the same analysis across multiple subjects and
placed it in the ``group_analysis`` subfolder of the data package you‚Äôve downloaded.
Executing the call below will load them.

.. GENERATED FROM PYTHON SOURCE LINES 75-96

.. code-block:: Python


    import mne

    subjects = [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19]

    # RSA against the RDM based on the pixels in each image
    rsa_pixels = [
        mne.read_evokeds(
            f"{data_path}/group_analysis/sub-{subject:02d}-rsa-ave.fif", condition="pixels"
        )
        for subject in subjects
    ]

    # RSA against the RDM based on the FaceNet embeddings of each image
    rsa_facenet = [
        mne.read_evokeds(
            f"{data_path}/group_analysis/sub-{subject:02d}-rsa-ave.fif", condition="facenet"
        )
        for subject in subjects
    ]








.. GENERATED FROM PYTHON SOURCE LINES 97-99

``rsa_pixels`` and ``rsa_facenet`` are now lists of :class:`mne.Evoked` objects. Here
are the first 5 of them:

.. GENERATED FROM PYTHON SOURCE LINES 99-102

.. code-block:: Python


    rsa_pixels[:5]





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Evoked | 'pixels' (average, N=450), 0 ‚Äì 0.9 s, baseline off, 1 ch, ~8 KiB>, <Evoked | 'pixels' (average, N=450), 0 ‚Äì 0.9 s, baseline off, 1 ch, ~8 KiB>, <Evoked | 'pixels' (average, N=450), 0 ‚Äì 0.9 s, baseline off, 1 ch, ~8 KiB>, <Evoked | 'pixels' (average, N=448), 0 ‚Äì 0.9 s, baseline off, 1 ch, ~8 KiB>, <Evoked | 'pixels' (average, N=450), 0 ‚Äì 0.9 s, baseline off, 1 ch, ~8 KiB>]



.. GENERATED FROM PYTHON SOURCE LINES 103-106

Every :class:`mne.Evoked`` object has data defined for a single channel, for the time
region 0 ‚Äì 0.9 seconds. The cell below compares the grand averages for pixels versus
FaceNet and gives the 95% confidence intervals for the means:

.. GENERATED FROM PYTHON SOURCE LINES 106-115

.. code-block:: Python


    mne.viz.plot_compare_evokeds(
        dict(pixels=rsa_pixels, facenet=rsa_facenet),
        picks=0,
        show_sensors=0,
        ylim=dict(misc=[-0.02, 0.15]),
    )





.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_001.png
   :alt: rsa
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Figure size 800x600 with 1 Axes>]



.. GENERATED FROM PYTHON SOURCE LINES 116-118

Based on the above plot, there might be a significant difference very
early on: 0 ‚Äì 0.16 seconds. Let‚Äôs run a t-test in this time-window.

.. GENERATED FROM PYTHON SOURCE LINES 118-149

.. code-block:: Python


    import numpy as np
    from scipy.stats import ttest_rel

    # Construct arrays with the data of all participants combined
    data_pixels = np.array(
        [ev.data[0] for ev in rsa_pixels]
    )  # shape: 16 x 199 (participants x timepoints)
    data_facenet = np.array(
        [ev.data[0] for ev in rsa_facenet]
    )  # shape: 16 x 199 (participants x timepoints)

    # Time region we are interested in
    tmin, tmax = 0, 0.16  # seconds

    # Convert tmin/tmax to sample indices
    tmin, tmax = np.searchsorted(rsa_pixels[0].times, [tmin, tmax])

    # Average the data across the time window
    data_pixels_avg = data_pixels[:, tmin:tmax].mean(axis=1)
    data_facenet_avg = data_facenet[:, tmin:tmax].mean(axis=1)

    # Perform the t-test
    tval, pval = ttest_rel(data_pixels_avg, data_facenet_avg)

    assert np.isscalar(tval), "We want a single t-value"
    assert np.isscalar(pval), "We want a single p-value"
    assert pval < 0.05, f"p-value is not significant {pval=}"

    print(f"{tval=}, {pval=}   Looking great! üòä")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    tval=np.float64(2.9768295878272895), pval=np.float64(0.009406024901266791)   Looking great! üòä




.. GENERATED FROM PYTHON SOURCE LINES 150-172

The ‚Äúcluster‚Äù part of cluster permutation tests
-----------------------------------------------

In essence, the permutation cluster test automates what we‚Äôve just done
above, but with a twist that we will get to later.

First, it must determine ‚Äúclusters‚Äù, i.e.¬†regions of interest where
there might be a significant difference between the conditions. We
eyeballed this based on the confidence interval of the mean, but the
algorithm must use some form of automated function. We can specify the
function that the algorithm should use, but it comes with a useful
default: a t-test: :func:`mne.stats.ttest_1samp_no_p`

.. warning
   The initial t-test (or whatever stat function you chose) is just to form clusters,
   it is not used to determine significance!

Let‚Äôs do this step manually first, so you get an understanding what is going on: -
First, we do the t-test for every timepoint - This is a t-test against 0. To perform a
paired t-test, we test ``data_pixels - data_facenet`` - Then, we set a threshold -
Everything above the threshold becomes a cluster - We compute the sum of all the
t-values inside the cluster

.. GENERATED FROM PYTHON SOURCE LINES 172-214

.. code-block:: Python


    import matplotlib.pyplot as plt
    from mne.stats import ttest_1samp_no_p

    tvals = ttest_1samp_no_p(data_pixels - data_facenet)


    # Plot the t-values and form a cluster
    def plot_cluster(tvals, threshold, data_cond1, data_cond2):
        """Plot a cluster."""
        times = rsa_pixels[0].times

        # Make the cluster
        cluster = np.where(tvals > threshold)[0]

        # This is an important statistec: the sum of all t-values in the cluster
        cluster_tvals_sum = tvals[cluster].sum()

        # Show the t-values and how the cluster is determined
        plt.figure(figsize=(8, 4))
        plt.plot(times, tvals, label="t-values")
        plt.axhline(0, color="black", linewidth=1)
        plt.axhline(2, color="black", linestyle="--", linewidth=1, label="threshold")
        plt.fill_between(
            times[cluster],
            tvals[cluster],
            threshold * np.ones(len(cluster)),
            color="C1",
            alpha=0.5,
            label="cluster",
        )
        plt.legend()
        plt.xlabel("Time samples")
        plt.ylabel("t-value")
        return cluster_tvals_sum


    cluster_tvals_sum = plot_cluster(
        tvals, threshold=2, data_cond1=data_pixels, data_cond2=data_facenet
    )
    print(f"Sum of t-values in the cluster: {cluster_tvals_sum:.3f}")




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_002.png
   :alt: 03 statistics tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Sum of t-values in the cluster: 105.259




.. GENERATED FROM PYTHON SOURCE LINES 215-230

Based on the figure above, a threshold value of ``2`` seems to obtain a reasonable
cluster. We could have chosen a different threshold, and there is no reason to choose
a threshold that corresponds to some p-value, other than perhaps providing a sensible
default value. The statistical function and the threshold used to form clusters are
completely up to the researcher. The idea here is to use your domain knowledge to
increase statistical power: when clusters ‚Äúmake sense‚Äù regarding to what we know about
the experimental setup and how MEG data behaves, we are likely to obtain better
p-values in the end.

The ‚Äúpermutation‚Äù part of the cluster permutation test
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Now that we have our cluster, we can ‚Äúpermute‚Äù it to find what random clusters looks
like. In order to generate random clusters, we mix up the class labels. Read the code
in the cell below carefully to find out how this is done:

.. GENERATED FROM PYTHON SOURCE LINES 230-249

.. code-block:: Python


    # Throw the data onto one big pile
    big_pile = np.vstack((data_pixels, data_facenet))

    # Shuffle the rows. This is what a "random permutation" means.
    np.random.shuffle(big_pile)

    # Divide again into the "pixels" and "facenet" conditions
    permuted_pixels, permuted_facenet = big_pile[: len(subjects)], big_pile[len(subjects) :]

    # Compute t-values, which should be nice and low
    permuted_tvals = ttest_1samp_no_p(permuted_pixels - permuted_facenet)

    # See what the clusters look like now
    permuted_cluster_tvals_sum = plot_cluster(
        permuted_tvals, threshold=2, data_cond1=permuted_pixels, data_cond2=permuted_facenet
    )
    print("Sum of t-values in cluster:", permuted_cluster_tvals_sum.round(3))




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_003.png
   :alt: 03 statistics tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Sum of t-values in cluster: 0.0




.. GENERATED FROM PYTHON SOURCE LINES 250-271

You can run the cell above multiple times to see what different permutations look
like. If it is very rare that we get a cluster with larger max t-value than the one we
found in the original data, we can say that there is a significant difference in the
original data. Finally, the percentage of times you find a larger max t-value in the
randomly permuted data is your p-value.

And that is the cluster permutation test!

So, with all of this in mind, we can now use the MNE-Python
:func:`mne.stats.permutation_cluster_1samp_test`
to perform everything we have done above in a single line of code. When
studying the line of code, keep the following in mind:

- Read the documentation of :func:`mne.stats.permutation_cluster_1samp_test` first!
- The first parameter, ``X`` is your data matrix (``n_participants x n_times``). Since
  we are using paired t-tests to define clusters, you need to set this to
  ``data_pixels - data_facenet`` like we did before
- The threshold to form clusters is ``2`` like we used before - We set ``tail=1`` to
  only look for positive t-values to mimic what we did before. You can also experiment
  with ``-1`` and ``0`` to look for clusters with negative t-values or both positive
  and negative.

.. GENERATED FROM PYTHON SOURCE LINES 271-278

.. code-block:: Python


    from mne.stats import permutation_cluster_1samp_test

    t_obs, clusters, pvals, H0 = permutation_cluster_1samp_test(
        X=data_pixels - data_facenet, threshold=2, tail=1
    )








.. GENERATED FROM PYTHON SOURCE LINES 279-280

Executing the cell below will explain what all the return values mean:

.. GENERATED FROM PYTHON SOURCE LINES 280-307

.. code-block:: Python


    times = rsa_pixels[0].times
    print(
        f"t_obs (an array of length {len(t_obs)}) contains the initial t-values that are "
        "used to create the clusters."
    )
    print(
        f"clusters (a list of length {len(clusters)}) contains for each cluster, the "
        "indices in the data array that are part of the cluster."
    )
    print(
        f"pvals (an array of length {len(pvals)}) contains for each cluster a p-value, "
        "more about this later."
    )
    print(
        f"H0 (an array of length {len(H0)}) contains the largest "
        "`permuted_cluster_tvals_sum` found in each random permutation."
    )
    print()
    print(f"The cluster permutation test found {len(clusters)} clusters.")
    for i, cluster in enumerate(clusters):
        print(
            f"Cluster {i}: {times[cluster[0].min()]:.3f}-{times[cluster[0].max()]:.3f} "
            "seconds."
        )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    t_obs (an array of length 199) contains the initial t-values that are used to create the clusters.
    clusters (a list of length 1) contains for each cluster, the indices in the data array that are part of the cluster.
    pvals (an array of length 1) contains for each cluster a p-value, more about this later.
    H0 (an array of length 1024) contains the largest `permuted_cluster_tvals_sum` found in each random permutation.

    The cluster permutation test found 1 clusters.
    Cluster 0: 0.000-0.164 seconds.




.. GENERATED FROM PYTHON SOURCE LINES 308-330

Computing the p-value
~~~~~~~~~~~~~~~~~~~~~

Depending on the value of ``tail`` you used in your call to
:func:`mne.stats.permutation_cluster_1samp_test` you have either 1, 2, or 3 clusters.
The clusters that your test found each have an associated p-value.

- If the sum-of-t-values for the cluster was **positive**, then the p-value is the
  fraction of random permutations that produced a cluster which a sum-of-t-values that
  was equal or **greater**
- If the sum-of-t-values for the cluster was **negative**, then the p-value is the
  fraction of random permutations that produced a cluster which a sum-of-t-values that
  was equal or **smaller**

To understand this better, lets use the ``t_obs``, ``clusters`` and ``H0`` return
values that you produced above to compute this p-value ourselves to test our knowledge
of what these return values mean. We will:

- Loop over all the clusters you found
- Determine the ``sum_of_t_values`` inside the cluster
- Compute the fraction of ``H0`` whose absolute value is equal or larger than the
  absolute ``sum_of_t_values``

.. GENERATED FROM PYTHON SOURCE LINES 330-335

.. code-block:: Python


    print(f"The cluster p-values should be:\t{pvals}")
    our_pvals = [(H0 >= t_obs[cluster].sum()).mean() for cluster in clusters]
    print(f"Our manually computed cluster p-values are:\t{our_pvals}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The cluster p-values should be: [0.03515625]
    Our manually computed cluster p-values are:     [np.float64(0.03515625)]




.. GENERATED FROM PYTHON SOURCE LINES 336-376

Interpreting the p-value
~~~~~~~~~~~~~~~~~~~~~~~~

Now comes the twist that I mentioned in the beginning. The final part of the cluster
permutation test is that you use the **smallest** cluster p-value as final outcome of
the test. You might be tempted to judge the significance of each cluster separately
based on its associated p-value, but that would be statistically incorrect.

.. warning
   The data inside a cluster was compared against random permutations of the dataset
   as a whole, not just the data inside the cluster. Hence, the test does not say
   whether a cluster by itself is statistically significant or not. The cluster
   permutation test only tells you whether the distribution of the data **as a
   whole** is significantly different between conditions. This is the price you pay
   to avoid the multiple comparisons problem.

So what can you do? `Sassenhagen & Draschkow
2019 <https://onlinelibrary.wiley.com/doi/10.1111/psyp.13335>`__ offer
some good advice. Personally, I would go for something like:

    The cluster-based permutation test revealed a significant difference
    between the conditions (p=SMALLEST_P_VALUE). This result was mostly
    driven by clusters at X (CLUSTER_PVAL) and Y (CLUSTER_PVAL), which
    correspond roughly to DESCRIPTION_OF_ROIS‚Äù.

Clusters across space and time
------------------------------

The formation of clusters becomes a bit more tricky in the case of
:class:`mne.SourceEstimate` objects, where data is defines across vertices in space as
well as samples in time.

In this case, the first order of business is to morph everything to a template brain,
so that the vertices are aligned. This is common practice in MEG group analysis, so
I‚Äôm not going to cover that process in this tutorial.

Instead, I have run the spatio-temporal RSA analysis that we did
:ref:`tut-source-level` across multiple subjects and placed the results in the
``group_analysis`` folder of your data package. Let‚Äôs load them and see if we can run
a spatio-temporal cluster-based permutation test (quite a mouthful).

.. GENERATED FROM PYTHON SOURCE LINES 376-392

.. code-block:: Python


    from mne import read_source_estimate

    stc_pixels = [
        read_source_estimate(
            f"{data_path}/group_analysis/sub-{subject:02d}-rsa-pixels-morphed"
        )
        for subject in subjects
    ]
    stc_facenet = [
        read_source_estimate(
            f"{data_path}/group_analysis/sub-{subject:02d}-rsa-facenet-morphed"
        )
        for subject in subjects
    ]








.. GENERATED FROM PYTHON SOURCE LINES 393-395

Now, ``stc_pixels`` and ``stc_facenet`` are two lists containing the
:class:`mne.SourceEstimate`‚Äôs for all subjects. Here are 5 of them:

.. GENERATED FROM PYTHON SOURCE LINES 395-398

.. code-block:: Python


    stc_pixels[:5]





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<SourceEstimate | 20484 vertices, tmin : 4.545454502105713 (ms), tmax : 495.45454072952265 (ms), tstep : 4.545454502105713 (ms), data shape : (20484, 109), ~8.7 MiB>, <SourceEstimate | 20484 vertices, tmin : 4.545454502105713 (ms), tmax : 495.45454072952265 (ms), tstep : 4.545454502105713 (ms), data shape : (20484, 109), ~8.7 MiB>, <SourceEstimate | 20484 vertices, tmin : 4.545454502105713 (ms), tmax : 495.45454072952265 (ms), tstep : 4.545454502105713 (ms), data shape : (20484, 109), ~8.7 MiB>, <SourceEstimate | 20484 vertices, tmin : 4.545454502105713 (ms), tmax : 495.45454072952265 (ms), tstep : 4.545454502105713 (ms), data shape : (20484, 109), ~8.7 MiB>, <SourceEstimate | 20484 vertices, tmin : 4.545454502105713 (ms), tmax : 495.45454072952265 (ms), tstep : 4.545454502105713 (ms), data shape : (20484, 109), ~8.7 MiB>]



.. GENERATED FROM PYTHON SOURCE LINES 399-412

Let‚Äôs proceed as before by first looking at the difference between the
means of the two conditions. A neat feature of the
:class:`mne.SourceEstimate`
class is that it supports common math operations such as ``+``, ``-``,
``*`` and ``/``. For example, computing the difference between the
``pixels`` and ``facenet`` RSA results of the first subject can simply
be computed as ``stc_diff = stc_pixels[0] - stc_facenet[0]``. In the
cell below, we compute the difference between the two conditions in a
pairwise manner for each subject, then compute the mean across the
pairwise differences. If you want a nice elegant way to write this,
remember that the
```zip()`` <https://docs.python.org/3/library/functions.html#zip>`__
function exists.

.. GENERATED FROM PYTHON SOURCE LINES 412-426

.. code-block:: Python


    stc_pairwise_diff = np.mean(
        [stc1 - stc2 for stc1, stc2 in zip(stc_pixels, stc_facenet)]
    )

    # Visualize the result.
    stc_pairwise_diff.plot(
        "fsaverage",
        subjects_dir=f"{data_path}/freesurfer",
        hemi="both",
        initial_time=0.121,
        views="caudal",
    )




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_004.png
   :alt: 03 statistics tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    True

    <mne.viz._brain._brain.Brain object at 0x7f11d83c13d0>



.. GENERATED FROM PYTHON SOURCE LINES 427-438

The figure shows us clear differences between the pixel versus FaceNet
RSA scores across the visual cortex.

Let‚Äôs explore this difference with a t-value map. In order to compute t-values, we
need to pull the data out of the :class:`mne.SourceEstimate` objects. As before, since
we have a within-subject contrast between the two conditions, we want to perform
pairwise tests. So, as a first step, create a data array ``X`` of shape
``(n_participants x n_vertices x n_times)`` where each slice ``i`` along the first
dimension is the difference between ``stc_pixels[i].data - stc_facenet[i].data``. The
next step is running ``X`` through the :func:`mne.stats.ttest_1samp_no_p` function to
obtain t-values.

.. GENERATED FROM PYTHON SOURCE LINES 438-459

.. code-block:: Python


    from mne.stats import ttest_1samp_no_p

    X = np.array([stc1.data - stc2.data for stc1, stc2 in zip(stc_pixels, stc_facenet)])
    tvals = ttest_1samp_no_p(X)

    # Some sanity checks for our result
    assert X.shape == (16, 20484, 109), "Your `X` array has the wrong shape. ü§î"
    assert -0.17 < X.min() < -0.16, "Your `X` array does not have the correct values. ü§î"
    assert 0.29 < X.max() < 0.30, "Your `X` array does not have the correct values. ü§î"

    assert tvals.shape == (20484, 109), "Your `tvals` array has the wrong shape. ü§î"
    assert (
        -6.6 < tvals.min() < -6.5
    ), "Your `tvals` array does not have the correct values. ü§î"
    assert (
        7.4 < tvals.max() < 7.5
    ), "Your `tvals` array does not have the correct values. ü§î"

    print("All good! üòä")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    All good! üòä




.. GENERATED FROM PYTHON SOURCE LINES 460-462

Now we can pack the ``tvals`` into a new :class:`mne.SourceEstimate` object in order
to visualize them:

.. GENERATED FROM PYTHON SOURCE LINES 462-478

.. code-block:: Python


    stc_tvals = mne.SourceEstimate(
        data=tvals,
        vertices=stc_pixels[0].vertices,
        tmin=stc_pixels[0].tmin,
        tstep=stc_pixels[0].tstep,
        subject="fsaverage",
    )
    stc_tvals.plot(
        "fsaverage",
        subjects_dir=f"{data_path}/freesurfer",
        hemi="both",
        initial_time=0.121,
        views="caudal",
    )




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_005.png
   :alt: 03 statistics tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    True

    <mne.viz._brain._brain.Brain object at 0x7f11d81c7830>



.. GENERATED FROM PYTHON SOURCE LINES 479-504

From this figure, it seems that setting a threshold of ``4`` may result in useful
clusters for our cluster-based permutation test. The function to perform the test in
both space and time is called :func:`mne.stats.spatio_temporal_cluster_1samp_test`

But wait! Before you go and run the test, there‚Äôs two things we need to
take care of.

.. warning
   The order of the dimensions of ``X``, namely ``(n_subjects x n_vertices x
   n_samples)`` is not how :func:`mne.stats.spatio_temporal_cluster_1samp_test` wants
   them. The function wants them as ``(n_subjects x n_samples x n_vertices)``. This is
   super unintuitive and everybody I know has gotten this wrong at least once. So,
   first we need to do ``X.transpose(0, 2, 1)`` to get the dimensions in the proper
   order. Please consider `helping us to improve the API
   <https://github.com/mne-tools/mne-python/issues/4859>`__ and get this fixed.

The other thing to keep in mind is that in order to form clusters across the cortex,
we need to make sure that only neighbouring vertices are part of the same cluster.
This is a similar problem as we faced when computing searchlight patches in space
during our RSA analysis. The solution is found within the :class:`mne.SourceSpaces`
object that keeps track of the distances between source points. Since all of our data
has been morphed to the ``fsaverage`` template brain, we need to load the
:class:`mne.SourceSpaces` object for that brain. Then, we can compute the spatial
adjacency matrix from the :class:`mne.SourceSpaces` object through the
:func:`mne.spatial_src_adjacency` function.

.. GENERATED FROM PYTHON SOURCE LINES 504-513

.. code-block:: Python


    src = mne.read_source_spaces(
        f"{data_path}/freesurfer/fsaverage/bem/fsaverage-ico-5-src.fif"
    )
    adj = mne.spatial_src_adjacency(src)

    assert adj.shape == (20484, 20484), "You've `adj` seems to have the wrong shape. ü§î"
    print("All good! üòä")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    All good! üòä




.. GENERATED FROM PYTHON SOURCE LINES 514-517

Now it‚Äôs time to run the big spatio-temporal cluster-based permutation test! `Read its
documentation first (:func:`mne.stats.spatio_temporal_cluster_1samp_test`) and then go
for it!

.. GENERATED FROM PYTHON SOURCE LINES 517-531

.. code-block:: Python


    from mne.stats import spatio_temporal_cluster_1samp_test

    t_obs, clusters, pvals, H0 = spatio_temporal_cluster_1samp_test(
        X.transpose(0, 2, 1), threshold=4, tail=1, adjacency=adj, n_jobs=-1, verbose=True
    )

    # What is the smallest cluster p-value that we found? Was it significant? (p < 0.05?)
    print("Smallest p-value:", pvals.min())
    if pvals.min() < 0.05:
        print("It was significant! üéâ")
    else:
        print("It was not significant ü§î")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    stat_fun(H1): min=-6.571207046508789 max=7.4570088386535645
    Running initial clustering ‚Ä¶
    Found 99 clusters
      0%|          | Permuting : 0/1023 [00:00<?,       ?it/s]      0%|          | Permuting : 1/1023 [00:03<1:02:21,    3.66s/it]      0%|          | Permuting : 2/1023 [00:03<31:13,    1.84s/it]        0%|          | Permuting : 3/1023 [00:03<20:51,    1.23s/it]      0%|          | Permuting : 4/1023 [00:04<16:05,    1.06it/s]      0%|          | Permuting : 5/1023 [00:04<12:39,    1.34it/s]      1%|          | Permuting : 6/1023 [00:04<11:28,    1.48it/s]      1%|          | Permuting : 7/1023 [00:04<09:40,    1.75it/s]      1%|          | Permuting : 8/1023 [00:04<09:05,    1.86it/s]      1%|          | Permuting : 9/1023 [00:05<08:22,    2.02it/s]      1%|          | Permuting : 10/1023 [00:05<07:34,    2.23it/s]      1%|          | Permuting : 11/1023 [00:05<07:12,    2.34it/s]      1%|          | Permuting : 12/1023 [00:05<06:33,    2.57it/s]      1%|‚ñè         | Permuting : 13/1023 [00:05<06:24,    2.63it/s]      1%|‚ñè         | Permuting : 14/1023 [00:05<05:49,    2.89it/s]      1%|‚ñè         | Permuting : 15/1023 [00:06<05:45,    2.92it/s]      2%|‚ñè         | Permuting : 16/1023 [00:06<05:20,    3.14it/s]      2%|‚ñè         | Permuting : 17/1023 [00:06<05:09,    3.25it/s]      2%|‚ñè         | Permuting : 18/1023 [00:06<04:57,    3.37it/s]      2%|‚ñè         | Permuting : 19/1023 [00:06<04:39,    3.60it/s]      2%|‚ñè         | Permuting : 20/1023 [00:06<04:33,    3.67it/s]      2%|‚ñè         | Permuting : 21/1023 [00:06<04:17,    3.90it/s]      2%|‚ñè         | Permuting : 22/1023 [00:07<04:13,    3.96it/s]      2%|‚ñè         | Permuting : 23/1023 [00:07<04:04,    4.09it/s]      2%|‚ñè         | Permuting : 24/1023 [00:07<03:56,    4.23it/s]      2%|‚ñè         | Permuting : 25/1023 [00:07<03:49,    4.36it/s]      3%|‚ñé         | Permuting : 26/1023 [00:07<03:37,    4.58it/s]      3%|‚ñé         | Permuting : 27/1023 [00:07<03:34,    4.65it/s]      3%|‚ñé         | Permuting : 28/1023 [00:07<03:31,    4.71it/s]      3%|‚ñé         | Permuting : 29/1023 [00:08<03:19,    4.98it/s]      3%|‚ñé         | Permuting : 30/1023 [00:08<03:21,    4.93it/s]      3%|‚ñé         | Permuting : 31/1023 [00:08<03:12,    5.14it/s]      3%|‚ñé         | Permuting : 32/1023 [00:08<03:02,    5.42it/s]      3%|‚ñé         | Permuting : 33/1023 [00:08<02:57,    5.57it/s]      3%|‚ñé         | Permuting : 34/1023 [00:08<02:54,    5.66it/s]      3%|‚ñé         | Permuting : 35/1023 [00:08<02:50,    5.81it/s]      4%|‚ñé         | Permuting : 36/1023 [00:08<02:41,    6.10it/s]      4%|‚ñé         | Permuting : 37/1023 [00:08<02:43,    6.02it/s]      4%|‚ñé         | Permuting : 38/1023 [00:08<02:36,    6.31it/s]      4%|‚ñç         | Permuting : 39/1023 [00:09<02:32,    6.44it/s]      4%|‚ñç         | Permuting : 40/1023 [00:09<02:29,    6.57it/s]      4%|‚ñç         | Permuting : 41/1023 [00:09<02:26,    6.70it/s]      4%|‚ñç         | Permuting : 42/1023 [00:09<02:22,    6.91it/s]      4%|‚ñç         | Permuting : 43/1023 [00:09<02:25,    6.76it/s]      4%|‚ñç         | Permuting : 44/1023 [00:09<02:20,    6.97it/s]      4%|‚ñç         | Permuting : 45/1023 [00:09<02:16,    7.18it/s]      4%|‚ñç         | Permuting : 46/1023 [00:09<02:13,    7.29it/s]      5%|‚ñç         | Permuting : 47/1023 [00:09<02:17,    7.11it/s]      5%|‚ñç         | Permuting : 48/1023 [00:09<02:11,    7.41it/s]      5%|‚ñç         | Permuting : 49/1023 [00:10<02:06,    7.73it/s]      5%|‚ñç         | Permuting : 50/1023 [00:10<02:02,    7.94it/s]      5%|‚ñç         | Permuting : 51/1023 [00:10<02:08,    7.57it/s]      5%|‚ñå         | Permuting : 52/1023 [00:10<02:04,    7.78it/s]      5%|‚ñå         | Permuting : 54/1023 [00:10<01:53,    8.53it/s]      5%|‚ñå         | Permuting : 56/1023 [00:10<01:58,    8.19it/s]      6%|‚ñå         | Permuting : 57/1023 [00:10<01:53,    8.48it/s]      6%|‚ñå         | Permuting : 58/1023 [00:10<01:51,    8.66it/s]      6%|‚ñå         | Permuting : 59/1023 [00:11<01:56,    8.25it/s]      6%|‚ñå         | Permuting : 60/1023 [00:11<01:54,    8.42it/s]      6%|‚ñå         | Permuting : 61/1023 [00:11<01:50,    8.73it/s]      6%|‚ñå         | Permuting : 62/1023 [00:11<01:46,    9.04it/s]      6%|‚ñå         | Permuting : 63/1023 [00:11<01:53,    8.44it/s]      6%|‚ñã         | Permuting : 64/1023 [00:11<01:51,    8.63it/s]      6%|‚ñã         | Permuting : 65/1023 [00:11<01:47,    8.94it/s]      6%|‚ñã         | Permuting : 66/1023 [00:11<01:43,    9.24it/s]      7%|‚ñã         | Permuting : 67/1023 [00:11<01:50,    8.62it/s]      7%|‚ñã         | Permuting : 68/1023 [00:11<01:46,    8.93it/s]      7%|‚ñã         | Permuting : 69/1023 [00:12<01:46,    8.97it/s]      7%|‚ñã         | Permuting : 70/1023 [00:12<01:44,    9.15it/s]      7%|‚ñã         | Permuting : 71/1023 [00:12<01:46,    8.91it/s]      7%|‚ñã         | Permuting : 72/1023 [00:12<01:43,    9.23it/s]      7%|‚ñã         | Permuting : 73/1023 [00:12<01:44,    9.12it/s]      7%|‚ñã         | Permuting : 74/1023 [00:12<01:40,    9.44it/s]      7%|‚ñã         | Permuting : 75/1023 [00:12<01:43,    9.17it/s]      7%|‚ñã         | Permuting : 76/1023 [00:12<01:41,    9.35it/s]      8%|‚ñä         | Permuting : 77/1023 [00:12<01:40,    9.38it/s]      8%|‚ñä         | Permuting : 78/1023 [00:12<01:39,    9.54it/s]      8%|‚ñä         | Permuting : 79/1023 [00:13<01:40,    9.41it/s]      8%|‚ñä         | Permuting : 80/1023 [00:13<01:41,    9.29it/s]      8%|‚ñä         | Permuting : 81/1023 [00:13<01:39,    9.46it/s]      8%|‚ñä         | Permuting : 82/1023 [00:13<01:37,    9.64it/s]      8%|‚ñä         | Permuting : 83/1023 [00:13<01:37,    9.64it/s]      8%|‚ñä         | Permuting : 84/1023 [00:13<01:38,    9.49it/s]      8%|‚ñä         | Permuting : 85/1023 [00:13<01:37,    9.67it/s]      8%|‚ñä         | Permuting : 86/1023 [00:13<01:36,    9.68it/s]      9%|‚ñä         | Permuting : 87/1023 [00:13<01:39,    9.38it/s]      9%|‚ñä         | Permuting : 88/1023 [00:13<01:36,    9.70it/s]      9%|‚ñâ         | Permuting : 90/1023 [00:14<01:35,    9.73it/s]      9%|‚ñâ         | Permuting : 92/1023 [00:14<01:34,    9.89it/s]      9%|‚ñâ         | Permuting : 93/1023 [00:14<01:39,    9.32it/s]      9%|‚ñâ         | Permuting : 94/1023 [00:14<01:36,    9.63it/s]      9%|‚ñâ         | Permuting : 95/1023 [00:14<01:40,    9.22it/s]      9%|‚ñâ         | Permuting : 96/1023 [00:14<01:37,    9.52it/s]     10%|‚ñâ         | Permuting : 98/1023 [00:14<01:35,    9.69it/s]     10%|‚ñâ         | Permuting : 99/1023 [00:15<01:38,    9.42it/s]     10%|‚ñâ         | Permuting : 100/1023 [00:15<01:35,    9.71it/s]     10%|‚ñâ         | Permuting : 102/1023 [00:15<01:33,    9.87it/s]     10%|‚ñà         | Permuting : 103/1023 [00:15<01:35,    9.60it/s]     10%|‚ñà         | Permuting : 104/1023 [00:15<01:33,    9.88it/s]     10%|‚ñà         | Permuting : 105/1023 [00:15<01:35,    9.60it/s]     10%|‚ñà         | Permuting : 106/1023 [00:15<01:34,    9.75it/s]     10%|‚ñà         | Permuting : 107/1023 [00:15<01:35,    9.62it/s]     11%|‚ñà         | Permuting : 108/1023 [00:15<01:32,    9.92it/s]     11%|‚ñà         | Permuting : 109/1023 [00:16<01:33,    9.76it/s]     11%|‚ñà         | Permuting : 110/1023 [00:16<01:32,    9.92it/s]     11%|‚ñà         | Permuting : 111/1023 [00:16<01:34,    9.63it/s]     11%|‚ñà         | Permuting : 112/1023 [00:16<01:31,    9.93it/s]     11%|‚ñà         | Permuting : 113/1023 [00:16<01:33,    9.78it/s]     11%|‚ñà         | Permuting : 114/1023 [00:16<01:32,    9.77it/s]     11%|‚ñà         | Permuting : 115/1023 [00:16<01:34,    9.64it/s]     11%|‚ñà‚ñè        | Permuting : 116/1023 [00:16<01:32,    9.80it/s]     11%|‚ñà‚ñè        | Permuting : 117/1023 [00:16<01:32,    9.79it/s]     12%|‚ñà‚ñè        | Permuting : 118/1023 [00:16<01:30,    9.95it/s]     12%|‚ñà‚ñè        | Permuting : 120/1023 [00:17<01:30,    9.95it/s]     12%|‚ñà‚ñè        | Permuting : 121/1023 [00:17<01:30,    9.94it/s]     12%|‚ñà‚ñè        | Permuting : 122/1023 [00:17<01:29,   10.09it/s]     12%|‚ñà‚ñè        | Permuting : 123/1023 [00:17<01:32,    9.78it/s]     12%|‚ñà‚ñè        | Permuting : 124/1023 [00:17<01:30,    9.92it/s]     12%|‚ñà‚ñè        | Permuting : 125/1023 [00:17<01:30,    9.92it/s]     12%|‚ñà‚ñè        | Permuting : 126/1023 [00:17<01:27,   10.23it/s]     12%|‚ñà‚ñè        | Permuting : 127/1023 [00:17<01:31,    9.76it/s]     13%|‚ñà‚ñé        | Permuting : 128/1023 [00:18<01:31,    9.76it/s]     13%|‚ñà‚ñé        | Permuting : 129/1023 [00:18<01:30,    9.92it/s]     13%|‚ñà‚ñé        | Permuting : 130/1023 [00:18<01:27,   10.24it/s]     13%|‚ñà‚ñé        | Permuting : 131/1023 [00:18<01:34,    9.45it/s]     13%|‚ñà‚ñé        | Permuting : 133/1023 [00:18<01:29,    9.92it/s]     13%|‚ñà‚ñé        | Permuting : 134/1023 [00:18<01:26,   10.23it/s]     13%|‚ñà‚ñé        | Permuting : 136/1023 [00:18<01:32,    9.62it/s]     13%|‚ñà‚ñé        | Permuting : 137/1023 [00:18<01:29,    9.92it/s]     13%|‚ñà‚ñé        | Permuting : 138/1023 [00:18<01:26,   10.21it/s]     14%|‚ñà‚ñé        | Permuting : 140/1023 [00:19<01:29,    9.89it/s]     14%|‚ñà‚ñç        | Permuting : 142/1023 [00:19<01:27,   10.03it/s]     14%|‚ñà‚ñç        | Permuting : 143/1023 [00:19<01:32,    9.50it/s]     14%|‚ñà‚ñç        | Permuting : 144/1023 [00:19<01:31,    9.65it/s]     14%|‚ñà‚ñç        | Permuting : 145/1023 [00:19<01:29,    9.78it/s]     14%|‚ñà‚ñç        | Permuting : 146/1023 [00:19<01:27,   10.07it/s]     14%|‚ñà‚ñç        | Permuting : 148/1023 [00:20<01:29,    9.77it/s]     15%|‚ñà‚ñç        | Permuting : 150/1023 [00:20<01:26,   10.04it/s]     15%|‚ñà‚ñç        | Permuting : 151/1023 [00:20<01:32,    9.40it/s]     15%|‚ñà‚ñç        | Permuting : 152/1023 [00:20<01:31,    9.55it/s]     15%|‚ñà‚ñç        | Permuting : 153/1023 [00:20<01:28,    9.82it/s]     15%|‚ñà‚ñå        | Permuting : 154/1023 [00:20<01:26,   10.10it/s]     15%|‚ñà‚ñå        | Permuting : 155/1023 [00:20<01:32,    9.42it/s]     15%|‚ñà‚ñå        | Permuting : 157/1023 [00:20<01:25,   10.10it/s]     15%|‚ñà‚ñå        | Permuting : 158/1023 [00:20<01:23,   10.38it/s]     16%|‚ñà‚ñå        | Permuting : 159/1023 [00:21<01:30,    9.54it/s]     16%|‚ñà‚ñå        | Permuting : 161/1023 [00:21<01:26,    9.94it/s]     16%|‚ñà‚ñå        | Permuting : 162/1023 [00:21<01:25,   10.08it/s]     16%|‚ñà‚ñå        | Permuting : 163/1023 [00:21<01:31,    9.42it/s]     16%|‚ñà‚ñå        | Permuting : 164/1023 [00:21<01:28,    9.69it/s]     16%|‚ñà‚ñå        | Permuting : 165/1023 [00:21<01:26,    9.97it/s]     16%|‚ñà‚ñå        | Permuting : 166/1023 [00:21<01:23,   10.24it/s]     16%|‚ñà‚ñã        | Permuting : 167/1023 [00:22<01:30,    9.41it/s]     17%|‚ñà‚ñã        | Permuting : 169/1023 [00:22<01:24,   10.11it/s]     17%|‚ñà‚ñã        | Permuting : 170/1023 [00:22<01:22,   10.39it/s]     17%|‚ñà‚ñã        | Permuting : 171/1023 [00:22<01:30,    9.41it/s]     17%|‚ñà‚ñã        | Permuting : 173/1023 [00:22<01:24,   10.09it/s]     17%|‚ñà‚ñã        | Permuting : 174/1023 [00:22<01:24,   10.09it/s]     17%|‚ñà‚ñã        | Permuting : 176/1023 [00:22<01:26,    9.80it/s]     17%|‚ñà‚ñã        | Permuting : 177/1023 [00:22<01:25,    9.94it/s]     17%|‚ñà‚ñã        | Permuting : 178/1023 [00:23<01:23,   10.07it/s]     18%|‚ñà‚ñä        | Permuting : 180/1023 [00:23<01:26,    9.80it/s]     18%|‚ñà‚ñä        | Permuting : 181/1023 [00:23<01:26,    9.79it/s]     18%|‚ñà‚ñä        | Permuting : 182/1023 [00:23<01:25,    9.79it/s]     18%|‚ñà‚ñä        | Permuting : 183/1023 [00:23<01:29,    9.43it/s]     18%|‚ñà‚ñä        | Permuting : 184/1023 [00:23<01:28,    9.45it/s]     18%|‚ñà‚ñä        | Permuting : 185/1023 [00:23<01:26,    9.72it/s]     18%|‚ñà‚ñä        | Permuting : 186/1023 [00:23<01:25,    9.84it/s]     18%|‚ñà‚ñä        | Permuting : 187/1023 [00:24<01:26,    9.71it/s]     18%|‚ñà‚ñä        | Permuting : 188/1023 [00:24<01:27,    9.59it/s]     18%|‚ñà‚ñä        | Permuting : 189/1023 [00:24<01:25,    9.74it/s]     19%|‚ñà‚ñä        | Permuting : 190/1023 [00:24<01:23,   10.03it/s]     19%|‚ñà‚ñä        | Permuting : 191/1023 [00:24<01:29,    9.34it/s]     19%|‚ñà‚ñâ        | Permuting : 193/1023 [00:24<01:23,    9.90it/s]     19%|‚ñà‚ñâ        | Permuting : 194/1023 [00:24<01:21,   10.19it/s]     19%|‚ñà‚ñâ        | Permuting : 195/1023 [00:24<01:28,    9.36it/s]     19%|‚ñà‚ñâ        | Permuting : 196/1023 [00:24<01:25,    9.64it/s]     19%|‚ñà‚ñâ        | Permuting : 198/1023 [00:25<01:20,   10.21it/s]     20%|‚ñà‚ñâ        | Permuting : 200/1023 [00:25<01:23,    9.91it/s]     20%|‚ñà‚ñâ        | Permuting : 201/1023 [00:25<01:22,    9.90it/s]     20%|‚ñà‚ñâ        | Permuting : 202/1023 [00:25<01:20,   10.18it/s]     20%|‚ñà‚ñâ        | Permuting : 203/1023 [00:25<01:24,    9.75it/s]     20%|‚ñà‚ñâ        | Permuting : 204/1023 [00:25<01:21,   10.03it/s]     20%|‚ñà‚ñà        | Permuting : 205/1023 [00:25<01:22,    9.89it/s]     20%|‚ñà‚ñà        | Permuting : 206/1023 [00:25<01:22,    9.89it/s]     20%|‚ñà‚ñà        | Permuting : 207/1023 [00:26<01:22,    9.89it/s]     20%|‚ñà‚ñà        | Permuting : 208/1023 [00:26<01:21,   10.03it/s]     20%|‚ñà‚ñà        | Permuting : 209/1023 [00:26<01:20,   10.17it/s]     21%|‚ñà‚ñà        | Permuting : 210/1023 [00:26<01:21,   10.00it/s]     21%|‚ñà‚ñà        | Permuting : 211/1023 [00:26<01:21,   10.00it/s]     21%|‚ñà‚ñà        | Permuting : 212/1023 [00:26<01:21,   10.00it/s]     21%|‚ñà‚ñà        | Permuting : 213/1023 [00:26<01:18,   10.30it/s]     21%|‚ñà‚ñà        | Permuting : 214/1023 [00:26<01:22,    9.82it/s]     21%|‚ñà‚ñà        | Permuting : 215/1023 [00:26<01:21,    9.97it/s]     21%|‚ñà‚ñà        | Permuting : 216/1023 [00:26<01:20,    9.97it/s]     21%|‚ñà‚ñà        | Permuting : 217/1023 [00:26<01:18,   10.26it/s]     21%|‚ñà‚ñà‚ñè       | Permuting : 218/1023 [00:27<01:20,    9.94it/s]     21%|‚ñà‚ñà‚ñè       | Permuting : 219/1023 [00:27<01:19,   10.09it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 220/1023 [00:27<01:18,   10.23it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 221/1023 [00:27<01:17,   10.38it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 222/1023 [00:27<01:23,    9.59it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 223/1023 [00:27<01:20,    9.90it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 224/1023 [00:27<01:18,   10.21it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 225/1023 [00:27<01:15,   10.52it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 226/1023 [00:27<01:20,    9.84it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 228/1023 [00:28<01:18,   10.15it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 229/1023 [00:28<01:17,   10.30it/s]     22%|‚ñà‚ñà‚ñè       | Permuting : 230/1023 [00:28<01:19,    9.97it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 232/1023 [00:28<01:18,   10.10it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 233/1023 [00:28<01:22,    9.53it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 234/1023 [00:28<01:20,    9.82it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 235/1023 [00:28<01:20,    9.83it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 236/1023 [00:28<01:18,    9.97it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 237/1023 [00:29<01:22,    9.54it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 238/1023 [00:29<01:19,    9.84it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 239/1023 [00:29<01:18,    9.98it/s]     23%|‚ñà‚ñà‚ñé       | Permuting : 240/1023 [00:29<01:17,   10.14it/s]     24%|‚ñà‚ñà‚ñé       | Permuting : 242/1023 [00:29<01:17,   10.11it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 243/1023 [00:29<01:17,   10.10it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 244/1023 [00:29<01:18,    9.94it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 245/1023 [00:29<01:20,    9.65it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 246/1023 [00:29<01:19,    9.80it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 247/1023 [00:29<01:16,   10.10it/s]     24%|‚ñà‚ñà‚ñç       | Permuting : 249/1023 [00:30<01:17,    9.94it/s]     25%|‚ñà‚ñà‚ñç       | Permuting : 251/1023 [00:30<01:14,   10.37it/s]     25%|‚ñà‚ñà‚ñç       | Permuting : 252/1023 [00:30<01:19,    9.64it/s]     25%|‚ñà‚ñà‚ñç       | Permuting : 254/1023 [00:30<01:16,   10.07it/s]     25%|‚ñà‚ñà‚ñç       | Permuting : 255/1023 [00:30<01:15,   10.20it/s]     25%|‚ñà‚ñà‚ñå       | Permuting : 256/1023 [00:30<01:18,    9.76it/s]     25%|‚ñà‚ñà‚ñå       | Permuting : 258/1023 [00:31<01:16,   10.04it/s]     25%|‚ñà‚ñà‚ñå       | Permuting : 259/1023 [00:31<01:16,   10.03it/s]     25%|‚ñà‚ñà‚ñå       | Permuting : 260/1023 [00:31<01:20,    9.51it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 261/1023 [00:31<01:17,    9.77it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 262/1023 [00:31<01:16,    9.91it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 263/1023 [00:31<01:15,   10.05it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 265/1023 [00:31<01:17,    9.77it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 267/1023 [00:31<01:14,   10.18it/s]     26%|‚ñà‚ñà‚ñå       | Permuting : 268/1023 [00:32<01:19,    9.52it/s]     26%|‚ñà‚ñà‚ñã       | Permuting : 269/1023 [00:32<01:17,    9.77it/s]     26%|‚ñà‚ñà‚ñã       | Permuting : 270/1023 [00:32<01:19,    9.53it/s]     26%|‚ñà‚ñà‚ñã       | Permuting : 271/1023 [00:32<01:16,    9.80it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 273/1023 [00:32<01:16,    9.80it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 274/1023 [00:32<01:17,    9.68it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 275/1023 [00:32<01:15,    9.95it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 276/1023 [00:32<01:17,    9.68it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 277/1023 [00:33<01:14,    9.96it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 278/1023 [00:33<01:15,    9.81it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 279/1023 [00:33<01:13,   10.09it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 280/1023 [00:33<01:15,    9.81it/s]     27%|‚ñà‚ñà‚ñã       | Permuting : 281/1023 [00:33<01:13,   10.09it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 283/1023 [00:33<01:12,   10.22it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 285/1023 [00:33<01:12,   10.19it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 286/1023 [00:34<01:16,    9.65it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 287/1023 [00:34<01:14,    9.91it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 288/1023 [00:34<01:14,    9.91it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 289/1023 [00:34<01:15,    9.78it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 290/1023 [00:34<01:16,    9.64it/s]     28%|‚ñà‚ñà‚ñä       | Permuting : 291/1023 [00:34<01:17,    9.40it/s]     29%|‚ñà‚ñà‚ñä       | Permuting : 292/1023 [00:34<01:15,    9.68it/s]     29%|‚ñà‚ñà‚ñä       | Permuting : 293/1023 [00:34<01:13,    9.96it/s]     29%|‚ñà‚ñà‚ñä       | Permuting : 294/1023 [00:34<01:15,    9.68it/s]     29%|‚ñà‚ñà‚ñâ       | Permuting : 296/1023 [00:34<01:13,    9.83it/s]     29%|‚ñà‚ñà‚ñâ       | Permuting : 297/1023 [00:35<01:12,    9.97it/s]     29%|‚ñà‚ñà‚ñâ       | Permuting : 298/1023 [00:35<01:13,    9.83it/s]     29%|‚ñà‚ñà‚ñâ       | Permuting : 300/1023 [00:35<01:12,    9.96it/s]     29%|‚ñà‚ñà‚ñâ       | Permuting : 301/1023 [00:35<01:11,   10.10it/s]     30%|‚ñà‚ñà‚ñâ       | Permuting : 302/1023 [00:35<01:14,    9.67it/s]     30%|‚ñà‚ñà‚ñâ       | Permuting : 303/1023 [00:35<01:13,    9.82it/s]     30%|‚ñà‚ñà‚ñâ       | Permuting : 304/1023 [00:35<01:12,    9.96it/s]     30%|‚ñà‚ñà‚ñâ       | Permuting : 305/1023 [00:35<01:11,   10.10it/s]     30%|‚ñà‚ñà‚ñâ       | Permuting : 306/1023 [00:35<01:12,    9.95it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 307/1023 [00:36<01:13,    9.80it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 308/1023 [00:36<01:11,    9.95it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 309/1023 [00:36<01:09,   10.23it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 310/1023 [00:36<01:10,   10.06it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 311/1023 [00:36<01:10,   10.06it/s]     30%|‚ñà‚ñà‚ñà       | Permuting : 312/1023 [00:36<01:09,   10.21it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 313/1023 [00:36<01:09,   10.19it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 314/1023 [00:36<01:09,   10.17it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 315/1023 [00:36<01:11,    9.85it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 316/1023 [00:36<01:09,   10.16it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 317/1023 [00:37<01:10,    9.98it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 318/1023 [00:37<01:09,   10.14it/s]     31%|‚ñà‚ñà‚ñà       | Permuting : 319/1023 [00:37<01:11,    9.82it/s]     31%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 320/1023 [00:37<01:10,    9.98it/s]     31%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 321/1023 [00:37<01:09,   10.13it/s]     31%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 322/1023 [00:37<01:11,    9.80it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 323/1023 [00:37<01:09,   10.11it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 324/1023 [00:37<01:09,   10.11it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 325/1023 [00:37<01:06,   10.43it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 326/1023 [00:37<01:10,    9.91it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 328/1023 [00:38<01:07,   10.22it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 329/1023 [00:38<01:06,   10.37it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 330/1023 [00:38<01:11,    9.72it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 331/1023 [00:38<01:08,   10.03it/s]     32%|‚ñà‚ñà‚ñà‚ñè      | Permuting : 332/1023 [00:38<01:08,   10.03it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 333/1023 [00:38<01:06,   10.33it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 334/1023 [00:38<01:10,    9.84it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 335/1023 [00:38<01:08,   10.00it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 336/1023 [00:38<01:07,   10.15it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 337/1023 [00:39<01:07,   10.13it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 338/1023 [00:39<01:09,    9.81it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 339/1023 [00:39<01:08,    9.97it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 340/1023 [00:39<01:08,    9.96it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 341/1023 [00:39<01:06,   10.28it/s]     33%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 342/1023 [00:39<01:09,    9.78it/s]     34%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 343/1023 [00:39<01:07,   10.10it/s]     34%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 344/1023 [00:39<01:08,    9.93it/s]     34%|‚ñà‚ñà‚ñà‚ñé      | Permuting : 345/1023 [00:39<01:08,    9.93it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 346/1023 [00:39<01:08,    9.92it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 347/1023 [00:39<01:05,   10.25it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 348/1023 [00:40<01:06,   10.22it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 349/1023 [00:40<01:04,   10.38it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 350/1023 [00:40<01:08,    9.86it/s]     34%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 352/1023 [00:40<01:04,   10.34it/s]     35%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 353/1023 [00:40<01:03,   10.48it/s]     35%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 354/1023 [00:40<01:07,    9.96it/s]     35%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 355/1023 [00:40<01:06,   10.12it/s]     35%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 357/1023 [00:40<01:01,   10.75it/s]     35%|‚ñà‚ñà‚ñà‚ñç      | Permuting : 358/1023 [00:41<01:07,    9.91it/s]     35%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 359/1023 [00:41<01:07,    9.90it/s]     35%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 360/1023 [00:41<01:04,   10.21it/s]     35%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 361/1023 [00:41<01:02,   10.53it/s]     35%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 362/1023 [00:41<01:06,   10.00it/s]     36%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 364/1023 [00:41<01:03,   10.30it/s]     36%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 365/1023 [00:41<01:04,   10.13it/s]     36%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 366/1023 [00:41<01:04,   10.12it/s]     36%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 368/1023 [00:42<01:04,   10.09it/s]     36%|‚ñà‚ñà‚ñà‚ñå      | Permuting : 369/1023 [00:42<01:04,   10.08it/s]     36%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 371/1023 [00:42<01:07,    9.66it/s]     36%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 373/1023 [00:42<01:03,   10.21it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 374/1023 [00:42<01:08,    9.41it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 375/1023 [00:42<01:06,    9.68it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 377/1023 [00:42<01:02,   10.37it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 378/1023 [00:43<01:08,    9.42it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 379/1023 [00:43<01:06,    9.69it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 381/1023 [00:43<01:01,   10.38it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 382/1023 [00:43<01:07,    9.56it/s]     37%|‚ñà‚ñà‚ñà‚ñã      | Permuting : 383/1023 [00:43<01:05,    9.70it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 384/1023 [00:43<01:04,    9.97it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 385/1023 [00:43<01:02,   10.24it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 386/1023 [00:44<01:05,    9.67it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 388/1023 [00:44<01:02,   10.09it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 389/1023 [00:44<01:01,   10.36it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 390/1023 [00:44<01:07,    9.41it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 391/1023 [00:44<01:05,    9.68it/s]     38%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 393/1023 [00:44<01:00,   10.37it/s]     39%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 394/1023 [00:44<01:05,    9.67it/s]     39%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 395/1023 [00:44<01:03,    9.95it/s]     39%|‚ñà‚ñà‚ñà‚ñä      | Permuting : 396/1023 [00:44<01:01,   10.22it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 397/1023 [00:44<01:00,   10.35it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 399/1023 [00:45<01:01,   10.17it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 401/1023 [00:45<00:58,   10.57it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 402/1023 [00:45<01:03,    9.85it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 403/1023 [00:45<01:01,   10.12it/s]     39%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 404/1023 [00:45<01:00,   10.25it/s]     40%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 405/1023 [00:45<01:01,   10.10it/s]     40%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 406/1023 [00:46<01:03,    9.68it/s]     40%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 408/1023 [00:46<01:00,   10.23it/s]     40%|‚ñà‚ñà‚ñà‚ñâ      | Permuting : 409/1023 [00:46<01:00,   10.20it/s]     40%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 410/1023 [00:46<01:04,    9.53it/s]     40%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 412/1023 [00:46<01:00,   10.07it/s]     40%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 413/1023 [00:46<00:59,   10.20it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 415/1023 [00:46<01:01,    9.91it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 416/1023 [00:46<01:00,   10.04it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 417/1023 [00:46<00:59,   10.17it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 419/1023 [00:47<01:01,    9.88it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 420/1023 [00:47<01:00,   10.01it/s]     41%|‚ñà‚ñà‚ñà‚ñà      | Permuting : 421/1023 [00:47<00:59,   10.14it/s]     41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 422/1023 [00:47<01:02,    9.62it/s]     41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 423/1023 [00:47<01:00,    9.88it/s]     41%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 424/1023 [00:47<01:01,    9.74it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 425/1023 [00:47<01:00,    9.88it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 426/1023 [00:47<01:01,    9.75it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 427/1023 [00:48<01:00,    9.89it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 429/1023 [00:48<00:58,   10.15it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 430/1023 [00:48<01:00,    9.87it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 431/1023 [00:48<00:59,    9.87it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 433/1023 [00:48<00:57,   10.28it/s]     42%|‚ñà‚ñà‚ñà‚ñà‚ñè     | Permuting : 434/1023 [00:48<00:59,    9.85it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 435/1023 [00:48<01:00,    9.71it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 436/1023 [00:48<00:58,    9.99it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 437/1023 [00:49<00:57,   10.13it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 438/1023 [00:49<00:58,    9.98it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 439/1023 [00:49<01:00,    9.70it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 440/1023 [00:49<00:58,    9.98it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 441/1023 [00:49<00:56,   10.27it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 442/1023 [00:49<00:56,   10.25it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 443/1023 [00:49<01:00,    9.66it/s]     43%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 444/1023 [00:49<00:59,    9.66it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 446/1023 [00:49<00:57,   10.09it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñé     | Permuting : 447/1023 [00:50<01:00,    9.54it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 448/1023 [00:50<00:58,    9.82it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 450/1023 [00:50<00:55,   10.25it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 451/1023 [00:50<00:59,    9.68it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 453/1023 [00:50<00:56,   10.09it/s]     44%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 454/1023 [00:50<00:54,   10.36it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 456/1023 [00:50<00:57,    9.92it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 457/1023 [00:51<00:55,   10.19it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 458/1023 [00:51<00:54,   10.32it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 459/1023 [00:51<00:57,    9.75it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñç     | Permuting : 460/1023 [00:51<00:56,    9.89it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 461/1023 [00:51<00:56,    9.89it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 462/1023 [00:51<00:56,    9.89it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 463/1023 [00:51<00:57,    9.75it/s]     45%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 464/1023 [00:51<00:55,   10.03it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 466/1023 [00:51<00:55,   10.03it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 468/1023 [00:52<00:53,   10.28it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 469/1023 [00:52<00:56,    9.84it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 470/1023 [00:52<00:57,    9.59it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 472/1023 [00:52<00:53,   10.27it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñå     | Permuting : 473/1023 [00:52<00:55,    9.85it/s]     46%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 475/1023 [00:52<00:54,    9.98it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 476/1023 [00:52<00:54,    9.97it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 477/1023 [00:53<00:54,    9.97it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 479/1023 [00:53<00:53,   10.09it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 481/1023 [00:53<00:53,   10.07it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 483/1023 [00:53<00:53,   10.06it/s]     47%|‚ñà‚ñà‚ñà‚ñà‚ñã     | Permuting : 485/1023 [00:53<00:52,   10.17it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 487/1023 [00:54<00:52,   10.15it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 489/1023 [00:54<00:52,   10.13it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 491/1023 [00:54<00:52,   10.23it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 492/1023 [00:54<00:53,    9.87it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 493/1023 [00:54<00:52,   10.11it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 494/1023 [00:54<00:53,    9.98it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 495/1023 [00:54<00:52,   10.09it/s]     48%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 496/1023 [00:54<00:53,    9.84it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 497/1023 [00:55<00:52,   10.09it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñä     | Permuting : 498/1023 [00:55<00:52,   10.08it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 499/1023 [00:55<00:50,   10.34it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 500/1023 [00:55<00:53,    9.80it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 501/1023 [00:55<00:52,    9.93it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 502/1023 [00:55<00:51,   10.05it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 503/1023 [00:55<00:50,   10.32it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 504/1023 [00:55<00:52,    9.89it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 505/1023 [00:55<00:51,   10.03it/s]     49%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 506/1023 [00:55<00:50,   10.31it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 507/1023 [00:56<00:51,   10.00it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 508/1023 [00:56<00:52,    9.73it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 509/1023 [00:56<00:51,   10.01it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 510/1023 [00:56<00:49,   10.28it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñâ     | Permuting : 511/1023 [00:56<00:49,   10.27it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 512/1023 [00:56<00:52,    9.82it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 514/1023 [00:56<00:49,   10.38it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 515/1023 [00:56<00:50,   10.07it/s]     50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 516/1023 [00:56<00:51,    9.92it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 518/1023 [00:57<00:49,   10.20it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 519/1023 [00:57<00:50,   10.04it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 521/1023 [00:57<00:50,   10.02it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 522/1023 [00:57<00:50,   10.02it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 523/1023 [00:57<00:50,    9.88it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà     | Permuting : 524/1023 [00:57<00:51,    9.60it/s]     51%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 525/1023 [00:57<00:51,    9.74it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 527/1023 [00:57<00:48,   10.16it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 528/1023 [00:58<00:52,    9.50it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 529/1023 [00:58<00:50,    9.77it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 530/1023 [00:58<00:49,    9.90it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 531/1023 [00:58<00:49,   10.04it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 532/1023 [00:58<00:51,    9.62it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 533/1023 [00:58<00:50,    9.64it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 534/1023 [00:58<00:49,    9.92it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 535/1023 [00:58<00:51,    9.51it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 536/1023 [00:59<00:50,    9.66it/s]     52%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè    | Permuting : 537/1023 [00:59<00:51,    9.40it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 538/1023 [00:59<00:50,    9.69it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 539/1023 [00:59<00:51,    9.43it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 540/1023 [00:59<00:49,    9.71it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 541/1023 [00:59<00:50,    9.58it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 542/1023 [00:59<00:48,    9.88it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 543/1023 [00:59<00:50,    9.59it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 544/1023 [00:59<00:49,    9.74it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 546/1023 [01:00<00:48,    9.90it/s]     53%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 547/1023 [01:00<00:48,    9.90it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 548/1023 [01:00<00:51,    9.22it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé    | Permuting : 549/1023 [01:00<00:49,    9.51it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 550/1023 [01:00<00:48,    9.80it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 551/1023 [01:00<00:46,   10.10it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 552/1023 [01:00<00:50,    9.25it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 553/1023 [01:00<00:49,    9.54it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 554/1023 [01:00<00:47,    9.84it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 555/1023 [01:00<00:46,   10.15it/s]     54%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 556/1023 [01:01<00:48,    9.54it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 559/1023 [01:01<00:45,   10.28it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 560/1023 [01:01<00:47,    9.70it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 561/1023 [01:01<00:48,    9.57it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç    | Permuting : 562/1023 [01:01<00:47,    9.72it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 563/1023 [01:01<00:45,   10.01it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 564/1023 [01:01<00:46,    9.86it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 565/1023 [01:02<00:47,    9.71it/s]     55%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 567/1023 [01:02<00:44,   10.15it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 568/1023 [01:02<00:44,   10.14it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 569/1023 [01:02<00:46,    9.71it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 570/1023 [01:02<00:45,    9.99it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 571/1023 [01:02<00:44,   10.13it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 572/1023 [01:02<00:44,   10.12it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 573/1023 [01:02<00:46,    9.68it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 574/1023 [01:02<00:45,    9.97it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå    | Permuting : 575/1023 [01:02<00:44,    9.96it/s]     56%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 576/1023 [01:03<00:45,    9.81it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 578/1023 [01:03<00:44,   10.09it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 579/1023 [01:03<00:45,    9.80it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 580/1023 [01:03<00:45,    9.80it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 581/1023 [01:03<00:45,    9.81it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 582/1023 [01:03<00:46,    9.53it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 583/1023 [01:03<00:45,    9.68it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 584/1023 [01:03<00:45,    9.69it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 585/1023 [01:03<00:43,   10.00it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 586/1023 [01:04<00:45,    9.68it/s]     57%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã    | Permuting : 588/1023 [01:04<00:44,    9.85it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 589/1023 [01:04<00:43,    9.99it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 590/1023 [01:04<00:45,    9.56it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 591/1023 [01:04<00:45,    9.57it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 592/1023 [01:04<00:43,    9.87it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 593/1023 [01:04<00:42,   10.18it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 594/1023 [01:04<00:44,    9.56it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 595/1023 [01:05<00:44,    9.58it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 596/1023 [01:05<00:43,    9.88it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 597/1023 [01:05<00:43,    9.89it/s]     58%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 598/1023 [01:05<00:44,    9.45it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 599/1023 [01:05<00:45,    9.33it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 600/1023 [01:05<00:43,    9.63it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä    | Permuting : 601/1023 [01:05<00:42,    9.94it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 602/1023 [01:05<00:44,    9.50it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 603/1023 [01:05<00:44,    9.52it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 604/1023 [01:06<00:43,    9.68it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 605/1023 [01:06<00:41,    9.98it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 606/1023 [01:06<00:43,    9.53it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 607/1023 [01:06<00:42,    9.68it/s]     59%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 608/1023 [01:06<00:42,    9.69it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 609/1023 [01:06<00:41,   10.01it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 610/1023 [01:06<00:43,    9.41it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 611/1023 [01:06<00:42,    9.72it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 612/1023 [01:06<00:41,    9.88it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ    | Permuting : 613/1023 [01:06<00:40,   10.21it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 614/1023 [01:07<00:42,    9.56it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 615/1023 [01:07<00:41,    9.88it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 617/1023 [01:07<00:39,   10.19it/s]     60%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 618/1023 [01:07<00:42,    9.57it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 619/1023 [01:07<00:40,    9.88it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 621/1023 [01:07<00:39,   10.18it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 622/1023 [01:07<00:43,    9.31it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 624/1023 [01:07<00:39,   10.04it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    | Permuting : 625/1023 [01:07<00:38,   10.33it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 628/1023 [01:08<00:38,   10.14it/s]     61%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 629/1023 [01:08<00:38,   10.27it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 630/1023 [01:08<00:41,    9.45it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 631/1023 [01:08<00:40,    9.72it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 633/1023 [01:08<00:37,   10.41it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 634/1023 [01:09<00:41,    9.46it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 636/1023 [01:09<00:38,   10.13it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 637/1023 [01:09<00:37,   10.25it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 638/1023 [01:09<00:40,    9.58it/s]     62%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè   | Permuting : 639/1023 [01:09<00:39,    9.84it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 640/1023 [01:09<00:37,   10.12it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 641/1023 [01:09<00:37,   10.25it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 643/1023 [01:09<00:38,    9.94it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 644/1023 [01:09<00:37,   10.07it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 645/1023 [01:10<00:37,   10.06it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 646/1023 [01:10<00:39,    9.66it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 647/1023 [01:10<00:38,    9.80it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 648/1023 [01:10<00:37,   10.07it/s]     63%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 649/1023 [01:10<00:36,   10.21it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 650/1023 [01:10<00:38,    9.64it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 651/1023 [01:10<00:37,    9.92it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé   | Permuting : 652/1023 [01:10<00:36,   10.06it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 653/1023 [01:10<00:35,   10.36it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 654/1023 [01:11<00:37,    9.88it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 655/1023 [01:11<00:37,    9.88it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 656/1023 [01:11<00:36,   10.03it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 657/1023 [01:11<00:35,   10.32it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 658/1023 [01:11<00:37,    9.85it/s]     64%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 659/1023 [01:11<00:36,    9.85it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 661/1023 [01:11<00:34,   10.60it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 662/1023 [01:11<00:37,    9.54it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 663/1023 [01:11<00:36,    9.83it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç   | Permuting : 664/1023 [01:11<00:35,   10.13it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 665/1023 [01:12<00:36,    9.82it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 666/1023 [01:12<00:36,    9.68it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 667/1023 [01:12<00:35,    9.98it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 668/1023 [01:12<00:34,   10.28it/s]     65%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 669/1023 [01:12<00:36,    9.80it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 671/1023 [01:12<00:34,   10.10it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 672/1023 [01:12<00:35,    9.95it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 673/1023 [01:12<00:35,    9.80it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 674/1023 [01:13<00:35,    9.80it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 675/1023 [01:13<00:34,   10.10it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 676/1023 [01:13<00:35,    9.64it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå   | Permuting : 677/1023 [01:13<00:34,    9.95it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 679/1023 [01:13<00:33,   10.24it/s]     66%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 680/1023 [01:13<00:35,    9.65it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 681/1023 [01:13<00:34,    9.94it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 682/1023 [01:13<00:34,    9.79it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 683/1023 [01:13<00:33,   10.08it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 684/1023 [01:14<00:34,    9.78it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 685/1023 [01:14<00:34,    9.79it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 686/1023 [01:14<00:33,    9.94it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 687/1023 [01:14<00:34,    9.77it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 688/1023 [01:14<00:35,    9.50it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 689/1023 [01:14<00:34,    9.66it/s]     67%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã   | Permuting : 690/1023 [01:14<00:33,    9.96it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 691/1023 [01:14<00:33,    9.81it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 692/1023 [01:14<00:34,    9.66it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 694/1023 [01:14<00:32,   10.27it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 695/1023 [01:15<00:32,    9.95it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 696/1023 [01:15<00:33,    9.66it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 697/1023 [01:15<00:32,    9.96it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 698/1023 [01:15<00:33,    9.81it/s]     68%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 699/1023 [01:15<00:32,    9.96it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 701/1023 [01:15<00:32,    9.95it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä   | Permuting : 703/1023 [01:15<00:31,   10.09it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 704/1023 [01:16<00:33,    9.66it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 706/1023 [01:16<00:32,    9.68it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 707/1023 [01:16<00:31,    9.96it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 708/1023 [01:16<00:32,    9.81it/s]     69%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 710/1023 [01:16<00:32,    9.69it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 711/1023 [01:16<00:31,    9.83it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 712/1023 [01:16<00:30,   10.11it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 714/1023 [01:17<00:32,    9.57it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 715/1023 [01:17<00:31,    9.84it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ   | Permuting : 716/1023 [01:17<00:30,   10.12it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 718/1023 [01:17<00:31,    9.71it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 719/1023 [01:17<00:31,    9.71it/s]     70%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 720/1023 [01:17<00:30,    9.98it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 722/1023 [01:17<00:30,    9.72it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 723/1023 [01:18<00:30,    9.72it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 724/1023 [01:18<00:29,    9.99it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 727/1023 [01:18<00:29,    9.98it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   | Permuting : 728/1023 [01:18<00:29,    9.97it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 729/1023 [01:18<00:31,    9.48it/s]     71%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 731/1023 [01:18<00:29,    9.86it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 732/1023 [01:18<00:29,    9.99it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 734/1023 [01:19<00:30,    9.63it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 735/1023 [01:19<00:29,    9.88it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 736/1023 [01:19<00:28,   10.12it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 737/1023 [01:19<00:30,    9.38it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 738/1023 [01:19<00:29,    9.52it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 739/1023 [01:19<00:29,    9.78it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 740/1023 [01:19<00:28,    9.91it/s]     72%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè  | Permuting : 741/1023 [01:19<00:29,    9.53it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 742/1023 [01:19<00:28,    9.79it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 743/1023 [01:20<00:30,    9.29it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 744/1023 [01:20<00:29,    9.44it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 745/1023 [01:20<00:29,    9.59it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 746/1023 [01:20<00:28,    9.60it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 747/1023 [01:20<00:30,    9.11it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 749/1023 [01:20<00:28,    9.78it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 750/1023 [01:20<00:29,    9.17it/s]     73%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 751/1023 [01:21<00:29,    9.32it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 753/1023 [01:21<00:27,    9.99it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé  | Permuting : 754/1023 [01:21<00:29,    9.23it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 755/1023 [01:21<00:28,    9.50it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 756/1023 [01:21<00:27,    9.64it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 757/1023 [01:21<00:26,    9.92it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 758/1023 [01:21<00:28,    9.39it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 759/1023 [01:21<00:27,    9.67it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 761/1023 [01:21<00:25,   10.09it/s]     74%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 762/1023 [01:22<00:27,    9.54it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 764/1023 [01:22<00:26,    9.82it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 765/1023 [01:22<00:25,    9.96it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 766/1023 [01:22<00:27,    9.43it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç  | Permuting : 767/1023 [01:22<00:26,    9.71it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 769/1023 [01:22<00:25,   10.12it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 770/1023 [01:22<00:26,    9.59it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 771/1023 [01:22<00:25,    9.72it/s]     75%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 772/1023 [01:23<00:25,    9.86it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 773/1023 [01:23<00:24,   10.14it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 774/1023 [01:23<00:25,    9.58it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 775/1023 [01:23<00:25,    9.87it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 776/1023 [01:23<00:24,   10.00it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 777/1023 [01:23<00:24,   10.14it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 779/1023 [01:23<00:24,    9.99it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå  | Permuting : 780/1023 [01:23<00:24,   10.12it/s]     76%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 781/1023 [01:23<00:23,   10.26it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 783/1023 [01:24<00:24,    9.81it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 784/1023 [01:24<00:23,   10.09it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 785/1023 [01:24<00:22,   10.37it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 786/1023 [01:24<00:24,    9.52it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 787/1023 [01:24<00:24,    9.80it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 789/1023 [01:24<00:22,   10.36it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 790/1023 [01:24<00:24,    9.53it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 791/1023 [01:24<00:23,    9.80it/s]     77%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã  | Permuting : 792/1023 [01:25<00:22,   10.07it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 793/1023 [01:25<00:22,   10.36it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 794/1023 [01:25<00:23,    9.77it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 797/1023 [01:25<00:21,   10.31it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 798/1023 [01:25<00:23,    9.51it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 799/1023 [01:25<00:23,    9.65it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 801/1023 [01:25<00:21,   10.32it/s]     78%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 802/1023 [01:26<00:23,    9.40it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 804/1023 [01:26<00:21,   10.05it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä  | Permuting : 805/1023 [01:26<00:21,   10.32it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 806/1023 [01:26<00:22,    9.76it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 807/1023 [01:26<00:22,    9.77it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 808/1023 [01:26<00:21,   10.04it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 809/1023 [01:26<00:21,    9.90it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 811/1023 [01:26<00:21,    9.89it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 812/1023 [01:27<00:21,    9.89it/s]     79%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 813/1023 [01:27<00:21,    9.89it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 814/1023 [01:27<00:21,    9.63it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 815/1023 [01:27<00:20,    9.91it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 816/1023 [01:27<00:21,    9.51it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 817/1023 [01:27<00:21,    9.78it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ  | Permuting : 818/1023 [01:27<00:21,    9.66it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 819/1023 [01:27<00:20,    9.94it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 820/1023 [01:27<00:21,    9.52it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 821/1023 [01:28<00:20,    9.81it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 822/1023 [01:28<00:21,    9.41it/s]     80%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 823/1023 [01:28<00:20,    9.70it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 824/1023 [01:28<00:20,    9.85it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 825/1023 [01:28<00:20,    9.85it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 826/1023 [01:28<00:20,    9.42it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 827/1023 [01:28<00:20,    9.44it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 829/1023 [01:28<00:19,   10.03it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 830/1023 [01:29<00:20,    9.47it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  | Permuting : 831/1023 [01:29<00:19,    9.63it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 832/1023 [01:29<00:19,    9.91it/s]     81%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 833/1023 [01:29<00:18,   10.21it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 834/1023 [01:29<00:19,    9.48it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 835/1023 [01:29<00:19,    9.62it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 836/1023 [01:29<00:19,    9.78it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 837/1023 [01:29<00:18,   10.08it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 838/1023 [01:29<00:19,    9.49it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 839/1023 [01:29<00:18,    9.79it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 840/1023 [01:29<00:18,    9.95it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 841/1023 [01:29<00:17,   10.26it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 842/1023 [01:30<00:18,    9.63it/s]     82%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè | Permuting : 843/1023 [01:30<00:18,    9.94it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 844/1023 [01:30<00:18,    9.93it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 845/1023 [01:30<00:17,   10.24it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 846/1023 [01:30<00:18,    9.61it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 847/1023 [01:30<00:17,    9.93it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 849/1023 [01:30<00:16,   10.39it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 850/1023 [01:31<00:18,    9.47it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 851/1023 [01:31<00:17,    9.62it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 852/1023 [01:31<00:17,    9.93it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 853/1023 [01:31<00:16,   10.07it/s]     83%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 854/1023 [01:31<00:17,    9.48it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 855/1023 [01:31<00:17,    9.78it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé | Permuting : 856/1023 [01:31<00:16,    9.94it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 857/1023 [01:31<00:16,   10.10it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 858/1023 [01:31<00:17,    9.62it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 859/1023 [01:31<00:16,    9.78it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 860/1023 [01:31<00:16,   10.09it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 861/1023 [01:32<00:17,    9.34it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 863/1023 [01:32<00:16,    9.94it/s]     84%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 864/1023 [01:32<00:15,   10.25it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 865/1023 [01:32<00:16,    9.49it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 866/1023 [01:32<00:16,    9.65it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 867/1023 [01:32<00:15,    9.81it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 868/1023 [01:32<00:15,   10.11it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç | Permuting : 869/1023 [01:32<00:15,    9.79it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 870/1023 [01:33<00:16,    9.51it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 871/1023 [01:33<00:15,    9.82it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 872/1023 [01:33<00:15,    9.98it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 873/1023 [01:33<00:14,   10.13it/s]     85%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 874/1023 [01:33<00:15,    9.65it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 875/1023 [01:33<00:15,    9.80it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 876/1023 [01:33<00:14,   10.13it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 877/1023 [01:33<00:14,   10.28it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 878/1023 [01:33<00:15,    9.49it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 880/1023 [01:33<00:14,   10.11it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 881/1023 [01:34<00:14,   10.10it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå | Permuting : 882/1023 [01:34<00:15,    9.36it/s]     86%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 884/1023 [01:34<00:13,   10.11it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 885/1023 [01:34<00:13,   10.25it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 886/1023 [01:34<00:14,    9.37it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 888/1023 [01:34<00:13,   10.10it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 889/1023 [01:34<00:12,   10.39it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 891/1023 [01:35<00:13,    9.65it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 893/1023 [01:35<00:12,   10.21it/s]     87%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã | Permuting : 894/1023 [01:35<00:13,    9.40it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 896/1023 [01:35<00:12,    9.81it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 897/1023 [01:35<00:12,    9.94it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 898/1023 [01:35<00:12,    9.68it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 899/1023 [01:36<00:12,    9.56it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 901/1023 [01:36<00:12,    9.96it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 902/1023 [01:36<00:12,    9.46it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 903/1023 [01:36<00:12,    9.47it/s]     88%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 905/1023 [01:36<00:11,   10.13it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 906/1023 [01:36<00:12,    9.73it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä | Permuting : 907/1023 [01:36<00:12,    9.61it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 909/1023 [01:36<00:11,   10.28it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 910/1023 [01:37<00:11,    9.86it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 912/1023 [01:37<00:11,    9.99it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 913/1023 [01:37<00:10,   10.12it/s]     89%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 915/1023 [01:37<00:11,    9.61it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 916/1023 [01:37<00:10,    9.86it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 917/1023 [01:37<00:10,    9.73it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 918/1023 [01:37<00:11,    9.50it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 919/1023 [01:38<00:10,    9.51it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ | Permuting : 920/1023 [01:38<00:10,    9.65it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 921/1023 [01:38<00:10,    9.78it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 922/1023 [01:38<00:10,    9.79it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 923/1023 [01:38<00:10,    9.53it/s]     90%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 925/1023 [01:38<00:09,    9.93it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 926/1023 [01:38<00:09,    9.93it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 927/1023 [01:38<00:10,    9.55it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 928/1023 [01:38<00:09,    9.82it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 929/1023 [01:39<00:09,    9.96it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 930/1023 [01:39<00:09,   10.09it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 932/1023 [01:39<00:09,    9.94it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà | Permuting : 933/1023 [01:39<00:09,    9.93it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 934/1023 [01:39<00:08,   10.07it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 935/1023 [01:39<00:08,    9.79it/s]     91%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 936/1023 [01:39<00:08,   10.07it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 937/1023 [01:39<00:08,    9.78it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 938/1023 [01:39<00:08,   10.07it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 939/1023 [01:39<00:08,   10.20it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 940/1023 [01:40<00:08,   10.04it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 941/1023 [01:40<00:08,    9.89it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 942/1023 [01:40<00:08,    9.88it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 943/1023 [01:40<00:07,   10.18it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 944/1023 [01:40<00:07,   10.01it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 945/1023 [01:40<00:07,    9.86it/s]     92%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñè| Permuting : 946/1023 [01:40<00:07,    9.86it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 947/1023 [01:40<00:07,   10.17it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 948/1023 [01:40<00:07,   10.15it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 949/1023 [01:40<00:07,    9.98it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 950/1023 [01:41<00:07,    9.98it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 951/1023 [01:41<00:07,   10.13it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 952/1023 [01:41<00:07,   10.12it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 953/1023 [01:41<00:07,    9.95it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 954/1023 [01:41<00:06,   10.10it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 955/1023 [01:41<00:06,   10.26it/s]     93%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 956/1023 [01:41<00:06,   10.22it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 957/1023 [01:41<00:06,   10.05it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñé| Permuting : 959/1023 [01:41<00:06,   10.19it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 960/1023 [01:42<00:06,   10.34it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 961/1023 [01:42<00:06,    9.71it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 962/1023 [01:42<00:06,   10.01it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 963/1023 [01:42<00:05,   10.16it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 964/1023 [01:42<00:05,   10.48it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 965/1023 [01:42<00:05,    9.80it/s]     94%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 966/1023 [01:42<00:05,    9.96it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 967/1023 [01:42<00:05,   10.28it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 968/1023 [01:42<00:05,   10.60it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 969/1023 [01:42<00:05,    9.91it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñç| Permuting : 970/1023 [01:43<00:05,    9.91it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 972/1023 [01:43<00:04,   10.53it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 973/1023 [01:43<00:05,    9.88it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 974/1023 [01:43<00:05,    9.73it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 975/1023 [01:43<00:04,    9.88it/s]     95%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 976/1023 [01:43<00:04,   10.18it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 977/1023 [01:43<00:04,   10.17it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 978/1023 [01:43<00:04,    9.85it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 979/1023 [01:43<00:04,   10.01it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 980/1023 [01:44<00:04,   10.00it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 981/1023 [01:44<00:04,    9.84it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 982/1023 [01:44<00:04,   10.15it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 983/1023 [01:44<00:04,    9.82it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå| Permuting : 984/1023 [01:44<00:03,   10.14it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 986/1023 [01:44<00:03,   10.12it/s]     96%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 987/1023 [01:44<00:03,   10.11it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 988/1023 [01:44<00:03,   10.25it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 989/1023 [01:45<00:03,    9.63it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 991/1023 [01:45<00:03,   10.24it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 992/1023 [01:45<00:03,    9.78it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 993/1023 [01:45<00:03,    9.64it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 994/1023 [01:45<00:02,    9.94it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 995/1023 [01:45<00:02,   10.25it/s]     97%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñã| Permuting : 996/1023 [01:45<00:02,    9.92it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 998/1023 [01:45<00:02,    9.92it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 999/1023 [01:45<00:02,   10.21it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1000/1023 [01:46<00:02,   10.05it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1001/1023 [01:46<00:02,    9.75it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1003/1023 [01:46<00:01,   10.50it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1004/1023 [01:46<00:01,   10.31it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1005/1023 [01:46<00:01,    9.99it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1006/1023 [01:46<00:01,   10.29it/s]     98%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1007/1023 [01:46<00:01,   10.59it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1009/1023 [01:46<00:01,   10.69it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñä| Permuting : 1010/1023 [01:46<00:01,   10.34it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1011/1023 [01:47<00:01,   10.64it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1012/1023 [01:47<00:01,   10.29it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1013/1023 [01:47<00:00,   10.59it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1014/1023 [01:47<00:00,   10.40it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1015/1023 [01:47<00:00,   10.38it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1016/1023 [01:47<00:00,   10.05it/s]     99%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1017/1023 [01:47<00:00,    9.61it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1018/1023 [01:47<00:00,    9.35it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1019/1023 [01:48<00:00,    9.00it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1020/1023 [01:48<00:00,    8.68it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1021/1023 [01:48<00:00,    8.50it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñâ| Permuting : 1022/1023 [01:48<00:00,    8.13it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| Permuting : 1023/1023 [01:48<00:00,    8.08it/s]    100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| Permuting : 1023/1023 [01:48<00:00,    9.39it/s]
    Smallest p-value: 0.0009765625
    It was significant! üéâ




.. GENERATED FROM PYTHON SOURCE LINES 532-534

MNE-Python comes with a function called :func:`mne.stats.summarize_clusters_stc` that
shows the spatial extent of the clusters:

.. GENERATED FROM PYTHON SOURCE LINES 534-554

.. code-block:: Python


    from mne.stats import summarize_clusters_stc

    stc_all_cluster_vis = summarize_clusters_stc(
        (t_obs, clusters, pvals, H0),  # output of spatio_temporal_cluster_1samp_test
        tstep=stc_pixels[0].tstep,  # difference in time between two time samples
        vertices=stc_pixels[0].vertices,  # vertex numbers
        subject="fsaverage",  # FreeSurfer subject whose brain to draw
        p_thresh=0.05,  # Only show clusters with an associated p-value below this threshold
    )

    # Plot the summary created by summarize_clusters_stc
    stc_all_cluster_vis.plot(
        hemi="both",
        views="ventral",
        subjects_dir=f"{data_path}/freesurfer",
        time_label="temporal extent (ms)",
        clim=dict(kind="value", pos_lims=[0, 0.01, 0.11]),
    )




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_006.png
   :alt: 03 statistics tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_03_statistics_tutorial_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    True

    <mne.viz._brain._brain.Brain object at 0x7f120c41dbe0>



.. GENERATED FROM PYTHON SOURCE LINES 555-561

In the figure above, the first time point shows all the clusters and the
subsequent timepoints show each cluster individually. The colors
indicate the extent of the cluster in time (=number of samples).

üéâ CONGRATULATIONS üéâ You‚Äôve reached the end of this tutorial series and
mastered the spatio-temporal cluster-based permutation test!


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 59.384 seconds)


.. _sphx_glr_download_auto_examples_tutorials_03_statistics_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 03_statistics_tutorial.ipynb <03_statistics_tutorial.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 03_statistics_tutorial.py <03_statistics_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 03_statistics_tutorial.zip <03_statistics_tutorial.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
