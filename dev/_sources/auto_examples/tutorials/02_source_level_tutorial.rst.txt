
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/tutorials/02_source_level_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_tutorials_02_source_level_tutorial.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tutorials_02_source_level_tutorial.py:


.. _tut-source-level:

Tutorial part 2: RSA on source-level MEG data
---------------------------------------------

In this tutorial, we will perform source-level RSA analysis on MEG data.

If you haven't done so, I recommend first completing :ref:`tut-sensor-level`.

While sensor-level RSA is useful to get a first impression of how neural representations
unfold over time, it is not really suited to study differences between brain regions.
For this, you want to so RSA in a searchlight pattern across the cortex.

The knowledge you have gained from your sensor-level analysis will serve you well for
this part, as the API of MNE-RSA is mostly the same across sensor- and source-level
analysis. However, performing a searchlight analysis is a heavy computation that can
take a lot of time. Hence, we will also learn about the API regarding restricting the
analysis to parts of the data in several ways.

In the cell below, update the ``data_path`` variable to point to where you have
extracted the `rsa-data.zip <https://github.com/wmvanvliet/neuroscience_tutorials/releases/download/2/rsa-data.zip>`__
file to.

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: Python

    # ruff: noqa: E402
    # sphinx_gallery_thumbnail_number=3

    # Set this to where you've extracted `data.zip` to
    data_path = "data"








.. GENERATED FROM PYTHON SOURCE LINES 32-36

We’ll start by loading the ``epochs`` again, but this time, we will restrict them to
only two experimental conditions: the first presentations of famous faces versus
scrambled faces. This will reduce the number of rows/columns in our RDMs and hence
speed up computing and comparing them.

.. GENERATED FROM PYTHON SOURCE LINES 36-42

.. code-block:: Python

    import mne

    epochs = mne.read_epochs(f"{data_path}/sub-02/sub-02-epo.fif")
    epochs = epochs[["face/famous/first", "scrambled/first"]]
    epochs






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <script type="text/javascript">
        // must be `var` (not `const`) because this can get embedded multiple times on a page
    var toggleVisibility = (className) => {

        const elements = document.querySelectorAll(`.${className}`);

        elements.forEach(element => {
            if (element.classList.contains("mne-repr-section-header")) {
                return  // Don't collapse the section header row
            }
            element.classList.toggle("mne-repr-collapsed");
        });

        // trigger caret to rotate
        var sel = `.mne-repr-section-header.${className} > th.mne-repr-section-toggle > button`;
        const button = document.querySelector(sel);
        button.classList.toggle("collapsed");

        // adjust tooltip
        sel = `tr.mne-repr-section-header.${className}`;
        const secHeadRow = document.querySelector(sel);
        secHeadRow.classList.toggle("collapsed");
        secHeadRow.title = secHeadRow.title === "Hide section" ? "Show section" : "Hide section";
    }
    </script>

    <style type="text/css">
        /*
    Styles in this section apply both to the sphinx-built website docs and to notebooks
    rendered in an IDE or in Jupyter. In our web docs, styles here are complemented by
    doc/_static/styles.css and other CSS files (e.g. from the sphinx theme, sphinx-gallery,
    or bootstrap). In IDEs/Jupyter, those style files are unavailable, so only the rules in
    this file apply (plus whatever default styling the IDE applies).
    */
    .mne-repr-table {
        display: inline;  /* prevent using full container width */
    }
    .mne-repr-table tr.mne-repr-section-header > th {
        padding-top: 1rem;
        text-align: left;
        vertical-align: middle;
    }
    .mne-repr-section-toggle > button {
        all: unset;
        display: block;
        height: 1rem;
        width: 1rem;
    }
    .mne-repr-section-toggle > button > svg {
        height: 60%;
    }

    /* transition (rotation) effects on the collapser button */
    .mne-repr-section-toggle > button.collapsed > svg {
        transition: 0.1s ease-out;
        transform: rotate(-90deg);
    }
    .mne-repr-section-toggle > button:not(.collapsed) > svg {
        transition: 0.1s ease-out;
        transform: rotate(0deg);
    }

    /* hide collapsed table rows */
    .mne-repr-collapsed {
        display: none;
    }


    @layer {
        /*
        Selectors in a `@layer` will always be lower-precedence than selectors outside the
        layer. So even though e.g. `div.output_html` is present in the sphinx-rendered
        website docs, the styles here won't take effect there as long as some other rule
        somewhere in the page's CSS targets the same element.

        In IDEs or Jupyter notebooks, though, the CSS files from the sphinx theme,
        sphinx-gallery, and bootstrap are unavailable, so these styles will apply.

        Notes:

        - the selector `.accordion-body` is for MNE Reports
        - the selector `.output_html` is for VSCode's notebook interface
        - the selector `.jp-RenderedHTML` is for Jupyter notebook
        - variables starting with `--theme-` are VSCode-specific.
        - variables starting with `--jp-` are Jupyter styles, *some of which* are also
          available in VSCode. Here we try the `--theme-` variable first, then fall back to
          the `--jp-` ones.
        */
        .mne-repr-table {
            --mne-toggle-color: var(--theme-foreground, var(--jp-ui-font-color1));
            --mne-button-bg-color: var(--theme-button-background, var(--jp-info-color0, var(--jp-content-link-color)));
            --mne-button-fg-color: var(--theme-button-foreground, var(--jp-ui-inverse-font-color0, var(--jp-editor-background)));
            --mne-button-hover-bg-color: var(--theme-button-hover-background, var(--jp-info-color1));
            --mne-button-radius: var(--jp-border-radius, 0.25rem);
        }
        /* chevron position/alignment; in VSCode it looks ok without adjusting */
        .accordion-body .mne-repr-section-toggle > button,
        .jp-RenderedHTML .mne-repr-section-toggle > button {
            padding: 0 0 45% 25% !important;
        }
        /* chevron color; MNE Report doesn't have light/dark mode */
        div.output_html .mne-repr-section-toggle > button > svg > path,
        .jp-RenderedHTML .mne-repr-section-toggle > button > svg > path {
            fill: var(--mne-toggle-color);
        }
        .accordion-body .mne-ch-names-btn,
        div.output_html .mne-ch-names-btn,
        .jp-RenderedHTML .mne-ch-names-btn {
            -webkit-border-radius: var(--mne-button-radius);
            -moz-border-radius: var(--mne-button-radius);
            border-radius: var(--mne-button-radius);
            border: none;
            background-image: none;
            background-color: var(--mne-button-bg-color);
            color: var(--mne-button-fg-color);
            font-size: inherit;
            min-width: 1.5rem;
            padding: 0.25rem;
            text-align: center;
            text-decoration: none;
        }
        .accordion-body .mne-ch-names-btn:hover,
        div.output_html .mne.ch-names-btn:hover,
        .jp-RenderedHTML .mne-ch-names-btn:hover {
            background-color: var(--mne-button-hover-bg-color);
            text-decoration: underline;
        }
        .accordion-body .mne-ch-names-btn:focus-visible,
        div.output_html .mne-ch-names-btn:focus-visible,
        .jp-RenderedHTML .mne-ch-names-btn:focus-visible {
            outline: 0.1875rem solid var(--mne-button-bg-color) !important;
            outline-offset: 0.1875rem !important;
        }
    }
    </style>



    <table class="table mne-repr-table">
    







    <tr class="mne-repr-section-header general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea"
         title="Hide section" 
        onclick="toggleVisibility('general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea')">
        <th class="mne-repr-section-toggle">
            <button >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>
            </button>
        </th>
        <th colspan="2">
            <strong>General</strong>
        </th>
    </tr>


    <tr class="repr-element general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea ">
        <td class="mne-repr-section-toggle"></td>
        <td>Filename(s)</td>
        <td>
        
            sub-02-epo.fif
        
        
        </td>
    </tr>

    <tr class="repr-element general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea ">
        <td class="mne-repr-section-toggle"></td>
        <td>MNE object type</td>
        <td>EpochsFIF</td>
    </tr>
    <tr class="repr-element general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea ">
        <td class="mne-repr-section-toggle"></td>
        <td>Measurement date</td>
    
        <td>2009-04-09 at 11:04:14 UTC</td>
    
    </tr>
    <tr class="repr-element general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea ">
        <td class="mne-repr-section-toggle"></td>
        <td>Participant</td>
    
    
    
    </tr>
    <tr class="repr-element general-1da048aa-2b76-4572-b1d7-2e44bb3eb8ea ">
        <td class="mne-repr-section-toggle"></td>
        <td>Experimenter</td>
    
        <td>MEG</td>
    
    </tr>
    







    <tr class="mne-repr-section-header acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452"
         title="Hide section" 
        onclick="toggleVisibility('acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452')">
        <th class="mne-repr-section-toggle">
            <button >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>
            </button>
        </th>
        <th colspan="2">
            <strong>Acquisition</strong>
        </th>
    </tr>





    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Total number of events</td>
        <td>297</td>
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Events counts</td>
    
        <td>
        
            face/famous/first: 147
            <br />
        
            scrambled/first: 150
        
        
        </td>
    
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Time range</td>
        <td>-0.200 – 2.900 s</td>
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Baseline</td>
        <td>-0.200 – 0.000 s</td>
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Sampling frequency</td>
        <td>220.00 Hz</td>
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Time points</td>
        <td>683</td>
    </tr>


    <tr class="repr-element acquisition-c5f8fcfc-7caa-4f15-8bb3-710d565bf452 ">
        <td class="mne-repr-section-toggle"></td>
        <td>Metadata</td>
        <td>297 rows × 2 columns</td>
    </tr>

    







    <tr class="mne-repr-section-header channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed"
         title="Hide section" 
        onclick="toggleVisibility('channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed')">
        <th class="mne-repr-section-toggle">
            <button >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>
            </button>
        </th>
        <th colspan="2">
            <strong>Channels</strong>
        </th>
    </tr>


    
    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>Magnetometers</td>
        <td>
            <button class="mne-ch-names-btn sd-sphinx-override sd-btn sd-btn-info sd-text-wrap sd-shadow-sm" onclick="alert('Good Magnetometers:\n\nMEG0111, MEG0121, MEG0131, MEG0141, MEG0211, MEG0221, MEG0231, MEG0241, MEG0311, MEG0321, MEG0331, MEG0341, MEG0411, MEG0421, MEG0431, MEG0441, MEG0511, MEG0521, MEG0531, MEG0541, MEG0611, MEG0621, MEG0631, MEG0641, MEG0711, MEG0721, MEG0731, MEG0741, MEG0811, MEG0821, MEG0911, MEG0921, MEG0931, MEG0941, MEG1011, MEG1021, MEG1031, MEG1041, MEG1111, MEG1121, MEG1131, MEG1141, MEG1211, MEG1221, MEG1231, MEG1241, MEG1311, MEG1321, MEG1331, MEG1341, MEG1411, MEG1421, MEG1431, MEG1441, MEG1511, MEG1521, MEG1531, MEG1541, MEG1611, MEG1621, MEG1631, MEG1641, MEG1711, MEG1721, MEG1731, MEG1741, MEG1811, MEG1821, MEG1831, MEG1841, MEG1911, MEG1921, MEG1931, MEG1941, MEG2011, MEG2021, MEG2031, MEG2041, MEG2111, MEG2121, MEG2131, MEG2141, MEG2211, MEG2221, MEG2231, MEG2241, MEG2311, MEG2321, MEG2331, MEG2341, MEG2411, MEG2421, MEG2431, MEG2441, MEG2511, MEG2521, MEG2531, MEG2541, MEG2611, MEG2621, MEG2631, MEG2641')" title="(Click to open in popup)&#13;&#13;MEG0111, MEG0121, MEG0131, MEG0141, MEG0211, MEG0221, MEG0231, MEG0241, MEG0311, MEG0321, MEG0331, MEG0341, MEG0411, MEG0421, MEG0431, MEG0441, MEG0511, MEG0521, MEG0531, MEG0541, MEG0611, MEG0621, MEG0631, MEG0641, MEG0711, MEG0721, MEG0731, MEG0741, MEG0811, MEG0821, MEG0911, MEG0921, MEG0931, MEG0941, MEG1011, MEG1021, MEG1031, MEG1041, MEG1111, MEG1121, MEG1131, MEG1141, MEG1211, MEG1221, MEG1231, MEG1241, MEG1311, MEG1321, MEG1331, MEG1341, MEG1411, MEG1421, MEG1431, MEG1441, MEG1511, MEG1521, MEG1531, MEG1541, MEG1611, MEG1621, MEG1631, MEG1641, MEG1711, MEG1721, MEG1731, MEG1741, MEG1811, MEG1821, MEG1831, MEG1841, MEG1911, MEG1921, MEG1931, MEG1941, MEG2011, MEG2021, MEG2031, MEG2041, MEG2111, MEG2121, MEG2131, MEG2141, MEG2211, MEG2221, MEG2231, MEG2241, MEG2311, MEG2321, MEG2331, MEG2341, MEG2411, MEG2421, MEG2431, MEG2441, MEG2511, MEG2521, MEG2531, MEG2541, MEG2611, MEG2621, MEG2631, MEG2641">
                102
            </button>

        
        </td>
    </tr>

    
    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>Gradiometers</td>
        <td>
            <button class="mne-ch-names-btn sd-sphinx-override sd-btn sd-btn-info sd-text-wrap sd-shadow-sm" onclick="alert('Good Gradiometers:\n\nMEG0113, MEG0112, MEG0122, MEG0123, MEG0132, MEG0133, MEG0143, MEG0142, MEG0213, MEG0212, MEG0222, MEG0223, MEG0232, MEG0233, MEG0243, MEG0242, MEG0313, MEG0312, MEG0322, MEG0323, MEG0333, MEG0332, MEG0343, MEG0342, MEG0413, MEG0412, MEG0422, MEG0423, MEG0432, MEG0433, MEG0443, MEG0442, MEG0513, MEG0512, MEG0523, MEG0522, MEG0532, MEG0533, MEG0542, MEG0543, MEG0613, MEG0612, MEG0622, MEG0623, MEG0633, MEG0632, MEG0642, MEG0643, MEG0713, MEG0712, MEG0723, MEG0722, MEG0733, MEG0732, MEG0743, MEG0742, MEG0813, MEG0812, MEG0822, MEG0823, MEG0913, MEG0912, MEG0923, MEG0922, MEG0932, MEG0933, MEG0942, MEG0943, MEG1013, MEG1012, MEG1023, MEG1022, MEG1032, MEG1033, MEG1043, MEG1042, MEG1112, MEG1113, MEG1123, MEG1122, MEG1133, MEG1132, MEG1142, MEG1143, MEG1213, MEG1212, MEG1223, MEG1222, MEG1232, MEG1233, MEG1243, MEG1242, MEG1312, MEG1313, MEG1323, MEG1322, MEG1333, MEG1332, MEG1342, MEG1343, MEG1412, MEG1413, MEG1423, MEG1422, MEG1433, MEG1432, MEG1442, MEG1443, MEG1512, MEG1513, MEG1522, MEG1523, MEG1533, MEG1532, MEG1543, MEG1542, MEG1613, MEG1612, MEG1622, MEG1623, MEG1632, MEG1633, MEG1643, MEG1642, MEG1713, MEG1712, MEG1722, MEG1723, MEG1732, MEG1733, MEG1743, MEG1742, MEG1813, MEG1812, MEG1822, MEG1823, MEG1832, MEG1833, MEG1843, MEG1842, MEG1912, MEG1913, MEG1923, MEG1922, MEG1932, MEG1933, MEG1943, MEG1942, MEG2013, MEG2012, MEG2023, MEG2022, MEG2032, MEG2033, MEG2042, MEG2043, MEG2113, MEG2112, MEG2122, MEG2123, MEG2133, MEG2132, MEG2143, MEG2142, MEG2212, MEG2213, MEG2223, MEG2222, MEG2233, MEG2232, MEG2242, MEG2243, MEG2312, MEG2313, MEG2323, MEG2322, MEG2332, MEG2333, MEG2343, MEG2342, MEG2412, MEG2413, MEG2423, MEG2422, MEG2433, MEG2432, MEG2442, MEG2443, MEG2512, MEG2513, MEG2522, MEG2523, MEG2533, MEG2532, MEG2543, MEG2542, MEG2612, MEG2613, MEG2623, MEG2622, MEG2633, MEG2632, MEG2642, MEG2643')" title="(Click to open in popup)&#13;&#13;MEG0113, MEG0112, MEG0122, MEG0123, MEG0132, MEG0133, MEG0143, MEG0142, MEG0213, MEG0212, MEG0222, MEG0223, MEG0232, MEG0233, MEG0243, MEG0242, MEG0313, MEG0312, MEG0322, MEG0323, MEG0333, MEG0332, MEG0343, MEG0342, MEG0413, MEG0412, MEG0422, MEG0423, MEG0432, MEG0433, MEG0443, MEG0442, MEG0513, MEG0512, MEG0523, MEG0522, MEG0532, MEG0533, MEG0542, MEG0543, MEG0613, MEG0612, MEG0622, MEG0623, MEG0633, MEG0632, MEG0642, MEG0643, MEG0713, MEG0712, MEG0723, MEG0722, MEG0733, MEG0732, MEG0743, MEG0742, MEG0813, MEG0812, MEG0822, MEG0823, MEG0913, MEG0912, MEG0923, MEG0922, MEG0932, MEG0933, MEG0942, MEG0943, MEG1013, MEG1012, MEG1023, MEG1022, MEG1032, MEG1033, MEG1043, MEG1042, MEG1112, MEG1113, MEG1123, MEG1122, MEG1133, MEG1132, MEG1142, MEG1143, MEG1213, MEG1212, MEG1223, MEG1222, MEG1232, MEG1233, MEG1243, MEG1242, MEG1312, MEG1313, MEG1323, MEG1322, MEG1333, MEG1332, MEG1342, MEG1343, MEG1412, MEG1413, MEG1423, MEG1422, MEG1433, MEG1432, MEG1442, MEG1443, MEG1512, MEG1513, MEG1522, MEG1523, MEG1533, MEG1532, MEG1543, MEG1542, MEG1613, MEG1612, MEG1622, MEG1623, MEG1632, MEG1633, MEG1643, MEG1642, MEG1713, MEG1712, MEG1722, MEG1723, MEG1732, MEG1733, MEG1743, MEG1742, MEG1813, MEG1812, MEG1822, MEG1823, MEG1832, MEG1833, MEG1843, MEG1842, MEG1912, MEG1913, MEG1923, MEG1922, MEG1932, MEG1933, MEG1943, MEG1942, MEG2013, MEG2012, MEG2023, MEG2022, MEG2032, MEG2033, MEG2042, MEG2043, MEG2113, MEG2112, MEG2122, MEG2123, MEG2133, MEG2132, MEG2143, MEG2142, MEG2212, MEG2213, MEG2223, MEG2222, MEG2233, MEG2232, MEG2242, MEG2243, MEG2312, MEG2313, MEG2323, MEG2322, MEG2332, MEG2333, MEG2343, MEG2342, MEG2412, MEG2413, MEG2423, MEG2422, MEG2433, MEG2432, MEG2442, MEG2443, MEG2512, MEG2513, MEG2522, MEG2523, MEG2533, MEG2532, MEG2543, MEG2542, MEG2612, MEG2613, MEG2623, MEG2622, MEG2633, MEG2632, MEG2642, MEG2643">
                204
            </button>

        
        </td>
    </tr>

    
    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>EOG</td>
        <td>
            <button class="mne-ch-names-btn sd-sphinx-override sd-btn sd-btn-info sd-text-wrap sd-shadow-sm" onclick="alert('Good EOG:\n\nEOG061, EOG062')" title="(Click to open in popup)&#13;&#13;EOG061, EOG062">
                2
            </button>

        
        </td>
    </tr>

    
    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>ECG</td>
        <td>
            <button class="mne-ch-names-btn sd-sphinx-override sd-btn sd-btn-info sd-text-wrap sd-shadow-sm" onclick="alert('Good ECG:\n\nECG063')" title="(Click to open in popup)&#13;&#13;ECG063">
                1
            </button>

        
        </td>
    </tr>

    
    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>Stimulus</td>
        <td>
            <button class="mne-ch-names-btn sd-sphinx-override sd-btn sd-btn-info sd-text-wrap sd-shadow-sm" onclick="alert('Good Stimulus:\n\nSTI101, STI201, STI301')" title="(Click to open in popup)&#13;&#13;STI101, STI201, STI301">
                3
            </button>

        
        </td>
    </tr>


    <tr class="repr-element channels-0700c251-7512-4a31-b3c1-92c8dc6a82ed ">
        <td class="mne-repr-section-toggle"></td>
        <td>Head & sensor digitization</td>
    
        <td>137 points</td>
    
    </tr>
    







    <tr class="mne-repr-section-header filters-51c322a0-08ab-477a-bca9-8bf0bdba52de"
         title="Hide section" 
        onclick="toggleVisibility('filters-51c322a0-08ab-477a-bca9-8bf0bdba52de')">
        <th class="mne-repr-section-toggle">
            <button >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.6.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"/></svg>
            </button>
        </th>
        <th colspan="2">
            <strong>Filters</strong>
        </th>
    </tr>


    <tr class="repr-element filters-51c322a0-08ab-477a-bca9-8bf0bdba52de ">
        <td class="mne-repr-section-toggle"></td>
        <td>Highpass</td>
        <td>1.00 Hz</td>
    </tr>


    <tr class="repr-element filters-51c322a0-08ab-477a-bca9-8bf0bdba52de ">
        <td class="mne-repr-section-toggle"></td>
        <td>Lowpass</td>
        <td>40.00 Hz</td>
    </tr>


    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 43-46

When we select a subset of epochs, the ``epochs.metadata`` field is likewise updated
to match the new selection. This feature is one of the main reasons to use the
``.metadata`` field instead of keeping a separate :class:`pandas.DataFrame` manually.

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: Python


    epochs.metadata.info()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <class 'pandas.core.frame.DataFrame'>
    Index: 297 entries, 4 to 884
    Data columns (total 2 columns):
     #   Column   Non-Null Count  Dtype 
    ---  ------   --------------  ----- 
     0   trigger  297 non-null    int64 
     1   file     297 non-null    object
    dtypes: int64(1), object(1)
    memory usage: 7.0+ KB




.. GENERATED FROM PYTHON SOURCE LINES 50-55

This means we can use the ``epochs.metadata["file"]`` column to restrict the pixel and
FaceNet RDMs to just those images still present in the MEG data.

In the cell below, we read the images and FaceNet embeddings and select the proper
rows from the data matrices and use ``compute_dsm`` to compute the appropriate RDMs.

.. GENERATED FROM PYTHON SOURCE LINES 55-79

.. code-block:: Python


    from glob import glob

    import numpy as np
    from PIL import Image

    files = sorted(glob(f"{data_path}/stimuli/*.bmp"))
    pixels = np.array([np.array(Image.open(f)) for f in files])

    store = np.load(f"{data_path}/stimuli/facenet_embeddings.npz")
    filenames = store["filenames"]
    embeddings = store["embeddings"]

    # Select the proper filenames
    epochs_filenames = set(epochs.metadata["file"])
    selection = [f in epochs_filenames for f in filenames]
    filenames = filenames[selection]

    # Select the proper rows from `pixels` and `embeddings` and compute the RDMs.
    from mne_rsa import compute_rdm

    pixel_rdm = compute_rdm(pixels[selection])
    facenet_rdm = compute_rdm(embeddings[selection])








.. GENERATED FROM PYTHON SOURCE LINES 80-82

Executing the cell below will test whether the RDMs have been properly constructed and
plot them.

.. GENERATED FROM PYTHON SOURCE LINES 82-109

.. code-block:: Python


    from mne_rsa import plot_rdms
    from scipy.spatial.distance import squareform

    if len(pixel_rdm) != len(facenet_rdm):
        print("The pixel and FaceNet RDMs are of difference sizes, that can't be right. 🤔")
    elif len(pixel_rdm) != 43956:
        print("Looks like the RDMs do not have the correct rows. 🤔")
    elif (
        squareform(pixel_rdm)[:150, :150].mean() >= squareform(pixel_rdm)[150:, 150:].mean()
    ):
        print(
            "The pixels RDM doesn't look quite right. Make sure the rows are in "
            "alphabetical filename order. 🤔"
        )
    elif (
        squareform(facenet_rdm)[:150, :150].mean()
        <= squareform(facenet_rdm)[150:, 150:].mean()
    ):
        print(
            "The FaceNet RDM doesn't look quite right. Make sure the rows are in "
            "alphabetical filename order. 🤔"
        )
    else:
        print("The RDMs look just right! 😊")
        plot_rdms([pixel_rdm, facenet_rdm], names=["pixels", "facenet"])




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_001.png
   :alt: pixels, facenet
   :srcset: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The RDMs look just right! 😊




.. GENERATED FROM PYTHON SOURCE LINES 110-117

To source space!
----------------

In order to perform RSA in source space, we must create source estimates for the
epochs. There’s many different ways to do this, and here we’ll use MNE, because we can
use the pre-computed inverse operator that is in the data packet and apply it to the
epochs to quickly get source estimates.

.. GENERATED FROM PYTHON SOURCE LINES 117-123

.. code-block:: Python


    from mne.minimum_norm import apply_inverse_epochs, read_inverse_operator

    inv = read_inverse_operator(f"{data_path}/sub-02/sub-02-inv.fif")
    stcs = apply_inverse_epochs(epochs, inv, lambda2=1 / 9)








.. GENERATED FROM PYTHON SOURCE LINES 124-126

The result is a list of 297 ``SourceEstimate`` objects. Here are the
first 5 of them:

.. GENERATED FROM PYTHON SOURCE LINES 126-129

.. code-block:: Python


    stcs[:5]





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<SourceEstimate | 2050 vertices, subject : sub-02, tmin : -200.0 (ms), tmax : 2899.9999999999995 (ms), tstep : 4.545454545454545 (ms), data shape : (2050, 683), ~10.7 MiB>, <SourceEstimate | 2050 vertices, subject : sub-02, tmin : -200.0 (ms), tmax : 2899.9999999999995 (ms), tstep : 4.545454545454545 (ms), data shape : (2050, 683), ~10.7 MiB>, <SourceEstimate | 2050 vertices, subject : sub-02, tmin : -200.0 (ms), tmax : 2899.9999999999995 (ms), tstep : 4.545454545454545 (ms), data shape : (2050, 683), ~10.7 MiB>, <SourceEstimate | 2050 vertices, subject : sub-02, tmin : -200.0 (ms), tmax : 2899.9999999999995 (ms), tstep : 4.545454545454545 (ms), data shape : (2050, 683), ~10.7 MiB>, <SourceEstimate | 2050 vertices, subject : sub-02, tmin : -200.0 (ms), tmax : 2899.9999999999995 (ms), tstep : 4.545454545454545 (ms), data shape : (2050, 683), ~10.7 MiB>]



.. GENERATED FROM PYTHON SOURCE LINES 130-143

The plan is to perform RSA in a searchlight pattern, not only as a sliding window
through time, but also sliding across different locations across the cortex. To this
end, we’ll define spatial patches with a certain radius, and only source points that
fall within a patch are taken into account when computing the RDM for that patch. The
cortex is heavily folded and ideally we define distances between source point as the
shortest path along the cortex, what is known as the geodesic distance, rather than
straight euclidean distance between the XYZ coordinates. MNE-Python is here to help us
out in this regard, as it contains a function to compute such distances and store them
within the :class:`mne.SourceSpaces` object (through the
:func:`mne.add_source_space_distances` function).

Let’s load the file containing the proper source space with pre-computed geodesic
distances between source points:

.. GENERATED FROM PYTHON SOURCE LINES 143-148

.. code-block:: Python


    from mne import read_source_spaces

    src = read_source_spaces(f"{data_path}/freesurfer/sub-02/bem/sub-02-oct5-src.fif")








.. GENERATED FROM PYTHON SOURCE LINES 149-154

To speed things up, let’s restrict the analysis to only the occipital, parietal and
temporal areas on the left hemisphere. There are several ways to tell MNE-RSA which
source points to use, and one of the most convenient ones is to use :class:`mne.Label`
objects. This allows us to define the desired areas using the “aparc” atlas that
FreeSurfer has constructed for us:

.. GENERATED FROM PYTHON SOURCE LINES 154-176

.. code-block:: Python


    rois = mne.read_labels_from_annot(
        "sub-02", parc="aparc", subjects_dir=f"{data_path}/freesurfer", hemi="lh"
    )

    # These are the regions we're interested in
    roi_sel = [
        "inferiortemporal-lh",
        "middletemporal-lh",
        "fusiform-lh",
        "bankssts-lh",
        "inferiorparietal-lh",
        "lateraloccipital-lh",
        "lingual-lh",
        "pericalcarine-lh",
        "cuneus-lh",
        "supramarginal-lh",
        "superiorparietal-lh",
    ]
    rois = [r for r in rois if r.name in roi_sel]









.. GENERATED FROM PYTHON SOURCE LINES 177-199

Source-space RSA
----------------

Time to actually perform the RSA in source space. The function you need is
:func:`mne_rsa.rsa_stcs` Take a look at the documentation of that function, which
should look familiar is it is very similar to :func:`mne_rsa.rsa_epochs` that you have
used before.

We will perform RSA on the source estimates, using the pixel and FaceNet RDMs as model
RDMs. As was the case with the sensor-level RSA, we will need specify labels to
indicate which image was shown during which epoch and which image corresponds to each
row/column of the ``pixel_rdm`` and ``facenet_rdm``. We will use the filenames for
this.

Out searchlight patches will have a spatial radius of 2cm (=0.02 meters) and a
temporal radius of 50 ms (=0.05 seconds). We will restrict the analysis to 0.0 to 0.5
seconds after stimulus onset and to the cortical regions (``rois``) we’ve selected
above. We can optionally set ``n_jobs=-1`` to use all CPU cores and ``verbose=True``
to show a progress bar.

Depending on the speed of your computer, this may take anywhere from a few seconds to
a few minutes to complete.

.. GENERATED FROM PYTHON SOURCE LINES 199-217

.. code-block:: Python


    from mne_rsa import rsa_stcs

    stc_rsa = rsa_stcs(
        stcs,
        [pixel_rdm, facenet_rdm],
        src=src,
        labels_stcs=epochs.metadata.file,
        labels_rdm_model=filenames,
        tmin=0,
        tmax=0.5,
        sel_vertices=rois,
        spatial_radius=0.02,
        temporal_radius=0.05,
        verbose=True,
        n_jobs=-1,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Restricting source space to 2050 out of [1026 1026] vertices.
    Restricting source space to 2050 out of [1025 1025] vertices.
    Performing RSA between SourceEstimates and 2 model RDM(s)
        Spatial radius: 0.02 meters
        Using 373 vertices
        Temporal radius: 11 samples
        Time interval: 0-0.5 seconds
        Number of searchlight patches: 41030
      0%|          | 0/41030 [00:00<?, ?patch/s]Creating spatio-temporal searchlight patches
      0%|          | 8/41030 [00:02<3:43:10,  3.06patch/s]      0%|          | 12/41030 [00:02<2:17:24,  4.98patch/s]      0%|          | 44/41030 [00:02<25:58, 26.30patch/s]        0%|          | 108/41030 [00:02<08:44, 78.06patch/s]      0%|          | 204/41030 [00:03<04:19, 157.40patch/s]      1%|          | 268/41030 [00:03<03:32, 192.23patch/s]      1%|          | 332/41030 [00:03<03:01, 223.92patch/s]      1%|          | 396/41030 [00:03<02:46, 244.25patch/s]      1%|          | 460/41030 [00:04<02:47, 241.93patch/s]      1%|▏         | 524/41030 [00:04<02:35, 260.91patch/s]      1%|▏         | 588/41030 [00:04<02:25, 278.56patch/s]      2%|▏         | 652/41030 [00:04<02:18, 291.75patch/s]      2%|▏         | 716/41030 [00:04<02:15, 296.79patch/s]      2%|▏         | 780/41030 [00:05<02:16, 295.16patch/s]      2%|▏         | 844/41030 [00:05<02:25, 276.72patch/s]      2%|▏         | 908/41030 [00:05<02:21, 283.65patch/s]      2%|▏         | 972/41030 [00:05<02:14, 296.81patch/s]      3%|▎         | 1036/41030 [00:05<02:06, 316.82patch/s]      3%|▎         | 1100/41030 [00:06<02:01, 329.60patch/s]      3%|▎         | 1164/41030 [00:06<02:15, 293.17patch/s]      3%|▎         | 1228/41030 [00:06<02:12, 300.72patch/s]      3%|▎         | 1292/41030 [00:06<02:08, 309.63patch/s]      3%|▎         | 1356/41030 [00:06<02:00, 327.97patch/s]      3%|▎         | 1420/41030 [00:07<01:57, 337.18patch/s]      4%|▎         | 1484/41030 [00:07<02:00, 329.28patch/s]      4%|▍         | 1548/41030 [00:07<02:15, 291.17patch/s]      4%|▍         | 1612/41030 [00:07<02:14, 293.40patch/s]      4%|▍         | 1676/41030 [00:07<02:08, 305.08patch/s]      4%|▍         | 1740/41030 [00:08<02:05, 312.76patch/s]      4%|▍         | 1804/41030 [00:08<02:01, 323.91patch/s]      5%|▍         | 1868/41030 [00:08<01:58, 329.92patch/s]      5%|▍         | 1932/41030 [00:08<02:12, 294.96patch/s]      5%|▍         | 1996/41030 [00:09<02:09, 301.77patch/s]      5%|▌         | 2060/41030 [00:09<02:06, 307.08patch/s]      5%|▌         | 2124/41030 [00:09<02:03, 314.94patch/s]      5%|▌         | 2188/41030 [00:09<02:01, 320.20patch/s]      5%|▌         | 2252/41030 [00:09<02:06, 307.76patch/s]      6%|▌         | 2316/41030 [00:10<02:17, 281.26patch/s]      6%|▌         | 2380/41030 [00:10<02:09, 299.43patch/s]      6%|▌         | 2444/41030 [00:10<02:05, 307.38patch/s]      6%|▌         | 2508/41030 [00:10<02:03, 313.09patch/s]      6%|▋         | 2572/41030 [00:10<02:03, 311.55patch/s]      6%|▋         | 2636/41030 [00:11<02:03, 310.16patch/s]      7%|▋         | 2700/41030 [00:11<02:15, 283.67patch/s]      7%|▋         | 2764/41030 [00:11<02:12, 289.72patch/s]      7%|▋         | 2828/41030 [00:11<02:10, 293.69patch/s]      7%|▋         | 2892/41030 [00:12<02:13, 285.22patch/s]      7%|▋         | 2956/41030 [00:12<02:15, 280.88patch/s]      7%|▋         | 3020/41030 [00:12<02:22, 267.42patch/s]      8%|▊         | 3084/41030 [00:12<02:15, 279.77patch/s]      8%|▊         | 3148/41030 [00:12<02:14, 282.70patch/s]      8%|▊         | 3212/41030 [00:13<02:15, 279.84patch/s]      8%|▊         | 3276/41030 [00:13<02:16, 276.72patch/s]      8%|▊         | 3340/41030 [00:13<02:20, 268.62patch/s]      8%|▊         | 3404/41030 [00:13<02:11, 285.82patch/s]      8%|▊         | 3468/41030 [00:14<02:11, 286.71patch/s]      9%|▊         | 3532/41030 [00:14<02:11, 286.16patch/s]      9%|▉         | 3596/41030 [00:14<02:12, 283.28patch/s]      9%|▉         | 3660/41030 [00:14<02:17, 270.97patch/s]      9%|▉         | 3724/41030 [00:14<02:10, 286.12patch/s]      9%|▉         | 3788/41030 [00:15<02:06, 294.63patch/s]      9%|▉         | 3852/41030 [00:15<02:03, 300.76patch/s]     10%|▉         | 3916/41030 [00:15<02:28, 249.82patch/s]     10%|▉         | 3980/41030 [00:16<02:35, 237.84patch/s]     10%|▉         | 4044/41030 [00:16<02:28, 248.31patch/s]     10%|█         | 4108/41030 [00:16<02:18, 265.79patch/s]     10%|█         | 4172/41030 [00:16<02:11, 281.30patch/s]     10%|█         | 4236/41030 [00:16<02:05, 292.73patch/s]     10%|█         | 4300/41030 [00:17<02:10, 280.69patch/s]     11%|█         | 4364/41030 [00:17<02:00, 303.09patch/s]     11%|█         | 4428/41030 [00:17<02:01, 300.78patch/s]     11%|█         | 4492/41030 [00:17<02:02, 298.52patch/s]     11%|█         | 4556/41030 [00:17<02:05, 290.21patch/s]     11%|█▏        | 4620/41030 [00:18<02:17, 265.76patch/s]     11%|█▏        | 4684/41030 [00:18<02:08, 282.73patch/s]     12%|█▏        | 4748/41030 [00:18<02:00, 299.90patch/s]     12%|█▏        | 4812/41030 [00:18<01:54, 315.21patch/s]     12%|█▏        | 4876/41030 [00:19<01:52, 320.83patch/s]     12%|█▏        | 4940/41030 [00:19<01:51, 323.23patch/s]     12%|█▏        | 5004/41030 [00:19<02:11, 274.39patch/s]     12%|█▏        | 5068/41030 [00:19<02:11, 273.43patch/s]     13%|█▎        | 5132/41030 [00:19<02:08, 279.13patch/s]     13%|█▎        | 5196/41030 [00:20<02:11, 271.81patch/s]     13%|█▎        | 5260/41030 [00:20<02:12, 269.12patch/s]     13%|█▎        | 5324/41030 [00:20<02:29, 238.59patch/s]     13%|█▎        | 5388/41030 [00:21<02:24, 246.88patch/s]     13%|█▎        | 5452/41030 [00:21<02:16, 261.02patch/s]     13%|█▎        | 5516/41030 [00:21<02:17, 257.46patch/s]     14%|█▎        | 5580/41030 [00:21<02:19, 253.63patch/s]     14%|█▍        | 5644/41030 [00:22<02:20, 252.32patch/s]     14%|█▍        | 5708/41030 [00:22<02:10, 269.87patch/s]     14%|█▍        | 5772/41030 [00:22<02:11, 268.52patch/s]     14%|█▍        | 5836/41030 [00:22<02:06, 278.71patch/s]     14%|█▍        | 5900/41030 [00:22<02:00, 290.84patch/s]     15%|█▍        | 5964/41030 [00:23<02:10, 268.09patch/s]     15%|█▍        | 6028/41030 [00:23<02:11, 266.51patch/s]     15%|█▍        | 6092/41030 [00:23<02:10, 268.29patch/s]     15%|█▌        | 6156/41030 [00:23<02:09, 269.12patch/s]     15%|█▌        | 6220/41030 [00:24<02:24, 241.51patch/s]     15%|█▌        | 6284/41030 [00:24<02:24, 239.71patch/s]     15%|█▌        | 6348/41030 [00:24<02:21, 245.34patch/s]     16%|█▌        | 6412/41030 [00:24<02:11, 263.67patch/s]     16%|█▌        | 6476/41030 [00:25<02:03, 279.10patch/s]     16%|█▌        | 6540/41030 [00:25<02:06, 273.48patch/s]     16%|█▌        | 6604/41030 [00:25<02:09, 264.98patch/s]     16%|█▋        | 6668/41030 [00:25<02:09, 264.51patch/s]     16%|█▋        | 6732/41030 [00:26<02:05, 274.01patch/s]     17%|█▋        | 6796/41030 [00:26<01:59, 285.40patch/s]     17%|█▋        | 6860/41030 [00:26<02:06, 269.79patch/s]     17%|█▋        | 6924/41030 [00:26<02:05, 271.29patch/s]     17%|█▋        | 6988/41030 [00:27<02:12, 256.75patch/s]     17%|█▋        | 7052/41030 [00:27<02:09, 262.30patch/s]     17%|█▋        | 7116/41030 [00:27<02:02, 276.57patch/s]     17%|█▋        | 7180/41030 [00:27<02:09, 261.95patch/s]     18%|█▊        | 7244/41030 [00:28<02:12, 255.74patch/s]     18%|█▊        | 7308/41030 [00:28<02:03, 273.73patch/s]     18%|█▊        | 7372/41030 [00:28<01:56, 289.24patch/s]     18%|█▊        | 7436/41030 [00:28<01:57, 285.25patch/s]     18%|█▊        | 7500/41030 [00:28<02:02, 272.80patch/s]     18%|█▊        | 7564/41030 [00:29<01:57, 283.88patch/s]     19%|█▊        | 7628/41030 [00:29<02:01, 275.96patch/s]     19%|█▊        | 7692/41030 [00:29<02:04, 268.69patch/s]     19%|█▉        | 7756/41030 [00:29<02:06, 262.63patch/s]     19%|█▉        | 7820/41030 [00:30<02:18, 240.22patch/s]     19%|█▉        | 7884/41030 [00:30<02:16, 243.17patch/s]     19%|█▉        | 7948/41030 [00:30<02:06, 261.84patch/s]     20%|█▉        | 8012/41030 [00:30<01:57, 281.39patch/s]     20%|█▉        | 8076/41030 [00:31<01:55, 285.91patch/s]     20%|█▉        | 8140/41030 [00:31<02:05, 262.51patch/s]     20%|█▉        | 8204/41030 [00:31<02:07, 258.10patch/s]     20%|██        | 8268/41030 [00:31<02:07, 256.88patch/s]     20%|██        | 8332/41030 [00:32<02:07, 255.88patch/s]     20%|██        | 8396/41030 [00:32<02:07, 255.44patch/s]     21%|██        | 8460/41030 [00:32<02:18, 235.07patch/s]     21%|██        | 8524/41030 [00:32<02:03, 262.45patch/s]     21%|██        | 8588/41030 [00:33<01:55, 280.17patch/s]     21%|██        | 8652/41030 [00:33<01:55, 280.54patch/s]     21%|██        | 8716/41030 [00:33<01:47, 299.85patch/s]     21%|██▏       | 8780/41030 [00:33<01:52, 287.82patch/s]     22%|██▏       | 8844/41030 [00:33<01:58, 271.26patch/s]     22%|██▏       | 8908/41030 [00:34<02:03, 259.51patch/s]     22%|██▏       | 8972/41030 [00:34<02:07, 250.64patch/s]     22%|██▏       | 9036/41030 [00:34<02:10, 245.24patch/s]     22%|██▏       | 9100/41030 [00:35<02:22, 224.65patch/s]     22%|██▏       | 9164/41030 [00:35<02:11, 241.66patch/s]     22%|██▏       | 9228/41030 [00:35<02:05, 253.23patch/s]     23%|██▎       | 9292/41030 [00:35<01:59, 265.89patch/s]     23%|██▎       | 9356/41030 [00:36<01:56, 271.83patch/s]     23%|██▎       | 9420/41030 [00:36<02:11, 240.03patch/s]     23%|██▎       | 9484/41030 [00:36<02:08, 245.42patch/s]     23%|██▎       | 9548/41030 [00:36<02:05, 250.76patch/s]     23%|██▎       | 9612/41030 [00:37<02:06, 249.16patch/s]     24%|██▎       | 9676/41030 [00:37<02:18, 226.35patch/s]     24%|██▎       | 9740/41030 [00:37<02:06, 248.09patch/s]     24%|██▍       | 9804/41030 [00:37<02:03, 253.80patch/s]     24%|██▍       | 9868/41030 [00:38<02:02, 253.44patch/s]     24%|██▍       | 9932/41030 [00:38<02:02, 254.04patch/s]     24%|██▍       | 9996/41030 [00:38<02:12, 233.64patch/s]     25%|██▍       | 10060/41030 [00:38<01:58, 262.01patch/s]     25%|██▍       | 10124/41030 [00:39<01:48, 283.73patch/s]     25%|██▍       | 10188/41030 [00:39<01:43, 297.09patch/s]     25%|██▍       | 10252/41030 [00:39<01:53, 272.07patch/s]     25%|██▌       | 10316/41030 [00:39<02:10, 234.65patch/s]     25%|██▌       | 10380/41030 [00:40<02:07, 241.06patch/s]     25%|██▌       | 10444/41030 [00:40<02:04, 246.20patch/s]     26%|██▌       | 10508/41030 [00:40<02:01, 250.51patch/s]     26%|██▌       | 10572/41030 [00:40<02:12, 230.29patch/s]     26%|██▌       | 10636/41030 [00:41<02:10, 233.57patch/s]     26%|██▌       | 10700/41030 [00:41<01:57, 258.79patch/s]     26%|██▌       | 10764/41030 [00:41<01:49, 277.41patch/s]     26%|██▋       | 10828/41030 [00:41<01:51, 269.92patch/s]     27%|██▋       | 10892/41030 [00:42<01:55, 261.04patch/s]     27%|██▋       | 10956/41030 [00:42<01:47, 278.85patch/s]     27%|██▋       | 11020/41030 [00:42<01:40, 299.88patch/s]     27%|██▋       | 11084/41030 [00:42<01:34, 318.19patch/s]     27%|██▋       | 11148/41030 [00:42<01:34, 315.61patch/s]     27%|██▋       | 11212/41030 [00:43<01:34, 315.26patch/s]     27%|██▋       | 11276/41030 [00:43<01:46, 280.08patch/s]     28%|██▊       | 11340/41030 [00:43<01:48, 273.64patch/s]     28%|██▊       | 11404/41030 [00:43<01:53, 261.83patch/s]     28%|██▊       | 11468/41030 [00:44<01:48, 272.38patch/s]     28%|██▊       | 11532/41030 [00:44<01:45, 280.52patch/s]     28%|██▊       | 11596/41030 [00:44<01:55, 254.49patch/s]     28%|██▊       | 11660/41030 [00:44<01:53, 258.46patch/s]     29%|██▊       | 11724/41030 [00:45<01:43, 282.93patch/s]     29%|██▊       | 11788/41030 [00:45<01:48, 269.39patch/s]     29%|██▉       | 11852/41030 [00:45<01:51, 262.36patch/s]     29%|██▉       | 11916/41030 [00:45<01:58, 245.59patch/s]     29%|██▉       | 11980/41030 [00:46<01:54, 253.59patch/s]     29%|██▉       | 12044/41030 [00:46<01:57, 246.51patch/s]     30%|██▉       | 12108/41030 [00:46<01:54, 253.31patch/s]     30%|██▉       | 12172/41030 [00:46<01:46, 270.26patch/s]     30%|██▉       | 12236/41030 [00:47<01:46, 270.75patch/s]     30%|██▉       | 12300/41030 [00:47<01:40, 286.76patch/s]     30%|███       | 12364/41030 [00:47<01:45, 270.66patch/s]     30%|███       | 12428/41030 [00:47<01:53, 252.70patch/s]     30%|███       | 12492/41030 [00:48<01:58, 240.24patch/s]     31%|███       | 12556/41030 [00:48<02:09, 220.12patch/s]     31%|███       | 12620/41030 [00:48<02:08, 220.63patch/s]     31%|███       | 12684/41030 [00:48<02:05, 226.24patch/s]     31%|███       | 12748/41030 [00:49<02:03, 229.91patch/s]     31%|███       | 12812/41030 [00:49<02:02, 230.43patch/s]     31%|███▏      | 12876/41030 [00:49<01:56, 240.79patch/s]     32%|███▏      | 12940/41030 [00:50<01:57, 238.84patch/s]     32%|███▏      | 13004/41030 [00:50<01:54, 245.51patch/s]     32%|███▏      | 13068/41030 [00:50<01:42, 273.92patch/s]     32%|███▏      | 13132/41030 [00:50<01:36, 289.05patch/s]     32%|███▏      | 13196/41030 [00:50<01:31, 303.69patch/s]     32%|███▏      | 13260/41030 [00:51<01:34, 292.70patch/s]     32%|███▏      | 13324/41030 [00:51<01:43, 267.23patch/s]     33%|███▎      | 13388/41030 [00:51<01:41, 273.33patch/s]     33%|███▎      | 13452/41030 [00:51<01:42, 268.60patch/s]     33%|███▎      | 13516/41030 [00:52<01:43, 266.13patch/s]     33%|███▎      | 13580/41030 [00:52<01:47, 255.04patch/s]     33%|███▎      | 13644/41030 [00:52<01:57, 232.35patch/s]     33%|███▎      | 13708/41030 [00:52<01:56, 234.46patch/s]     34%|███▎      | 13772/41030 [00:53<01:54, 237.53patch/s]     34%|███▎      | 13836/41030 [00:53<01:52, 240.79patch/s]     34%|███▍      | 13900/41030 [00:53<01:54, 237.32patch/s]     34%|███▍      | 13964/41030 [00:53<01:47, 251.07patch/s]     34%|███▍      | 14028/41030 [00:54<01:45, 256.82patch/s]     34%|███▍      | 14092/41030 [00:54<01:40, 267.45patch/s]     35%|███▍      | 14156/41030 [00:54<01:33, 286.45patch/s]     35%|███▍      | 14220/41030 [00:54<01:37, 273.87patch/s]     35%|███▍      | 14284/41030 [00:55<01:34, 282.64patch/s]     35%|███▍      | 14348/41030 [00:55<01:33, 285.18patch/s]     35%|███▌      | 14412/41030 [00:55<01:33, 285.66patch/s]     35%|███▌      | 14476/41030 [00:55<01:44, 255.28patch/s]     35%|███▌      | 14540/41030 [00:56<01:53, 234.38patch/s]     36%|███▌      | 14604/41030 [00:56<01:51, 237.47patch/s]     36%|███▌      | 14668/41030 [00:56<01:51, 235.97patch/s]     36%|███▌      | 14732/41030 [00:56<01:52, 234.63patch/s]     36%|███▌      | 14796/41030 [00:57<01:51, 234.55patch/s]     36%|███▌      | 14860/41030 [00:57<01:41, 257.53patch/s]     36%|███▋      | 14924/41030 [00:57<01:33, 277.99patch/s]     37%|███▋      | 14988/41030 [00:57<01:35, 272.63patch/s]     37%|███▋      | 15052/41030 [00:58<01:36, 269.29patch/s]     37%|███▋      | 15116/41030 [00:58<01:43, 249.62patch/s]     37%|███▋      | 15180/41030 [00:58<01:42, 252.42patch/s]     37%|███▋      | 15244/41030 [00:58<01:38, 262.00patch/s]     37%|███▋      | 15308/41030 [00:59<01:33, 273.67patch/s]     37%|███▋      | 15372/41030 [00:59<01:30, 283.73patch/s]     38%|███▊      | 15436/41030 [00:59<01:35, 267.93patch/s]     38%|███▊      | 15500/41030 [00:59<01:32, 274.63patch/s]     38%|███▊      | 15564/41030 [01:00<01:34, 269.14patch/s]     38%|███▊      | 15628/41030 [01:00<01:30, 280.01patch/s]     38%|███▊      | 15692/41030 [01:00<01:26, 294.40patch/s]     38%|███▊      | 15756/41030 [01:00<01:31, 276.05patch/s]     39%|███▊      | 15820/41030 [01:00<01:33, 269.57patch/s]     39%|███▊      | 15884/41030 [01:01<01:39, 253.54patch/s]     39%|███▉      | 15948/41030 [01:01<01:38, 254.32patch/s]     39%|███▉      | 16012/41030 [01:01<01:43, 242.45patch/s]     39%|███▉      | 16076/41030 [01:02<01:43, 241.82patch/s]     39%|███▉      | 16140/41030 [01:02<01:34, 262.32patch/s]     39%|███▉      | 16204/41030 [01:02<01:30, 274.18patch/s]     40%|███▉      | 16268/41030 [01:02<01:27, 282.73patch/s]     40%|███▉      | 16332/41030 [01:02<01:24, 290.69patch/s]     40%|███▉      | 16396/41030 [01:03<01:33, 263.74patch/s]     40%|████      | 16460/41030 [01:03<01:33, 261.90patch/s]     40%|████      | 16524/41030 [01:03<01:33, 262.18patch/s]     40%|████      | 16588/41030 [01:03<01:32, 263.98patch/s]     41%|████      | 16652/41030 [01:04<01:37, 250.31patch/s]     41%|████      | 16716/41030 [01:04<01:48, 223.19patch/s]     41%|████      | 16780/41030 [01:04<01:47, 225.93patch/s]     41%|████      | 16844/41030 [01:05<01:50, 219.56patch/s]     41%|████      | 16908/41030 [01:05<01:52, 214.72patch/s]     41%|████▏     | 16972/41030 [01:05<01:54, 210.41patch/s]     42%|████▏     | 17036/41030 [01:05<01:47, 223.31patch/s]     42%|████▏     | 17100/41030 [01:06<01:43, 232.17patch/s]     42%|████▏     | 17164/41030 [01:06<01:40, 237.75patch/s]     42%|████▏     | 17228/41030 [01:06<01:42, 232.21patch/s]     42%|████▏     | 17292/41030 [01:07<01:44, 226.10patch/s]     42%|████▏     | 17356/41030 [01:07<01:37, 241.58patch/s]     42%|████▏     | 17420/41030 [01:07<01:32, 255.33patch/s]     43%|████▎     | 17484/41030 [01:07<01:34, 250.46patch/s]     43%|████▎     | 17548/41030 [01:08<01:31, 256.93patch/s]     43%|████▎     | 17612/41030 [01:08<01:36, 241.89patch/s]     43%|████▎     | 17676/41030 [01:08<01:40, 232.45patch/s]     43%|████▎     | 17740/41030 [01:08<01:40, 232.12patch/s]     43%|████▎     | 17804/41030 [01:09<01:41, 228.07patch/s]     44%|████▎     | 17868/41030 [01:09<01:42, 226.26patch/s]     44%|████▎     | 17932/41030 [01:09<01:38, 234.93patch/s]     44%|████▍     | 17996/41030 [01:09<01:28, 260.73patch/s]     44%|████▍     | 18060/41030 [01:10<01:32, 248.52patch/s]     44%|████▍     | 18124/41030 [01:10<01:36, 237.44patch/s]     44%|████▍     | 18188/41030 [01:10<01:42, 223.38patch/s]     44%|████▍     | 18252/41030 [01:11<01:38, 230.28patch/s]     45%|████▍     | 18316/41030 [01:11<01:34, 239.85patch/s]     45%|████▍     | 18380/41030 [01:11<01:33, 241.12patch/s]     45%|████▍     | 18444/41030 [01:11<01:41, 222.96patch/s]     45%|████▌     | 18508/41030 [01:12<01:34, 237.30patch/s]     45%|████▌     | 18572/41030 [01:12<01:29, 249.65patch/s]     45%|████▌     | 18636/41030 [01:12<01:29, 249.38patch/s]     46%|████▌     | 18700/41030 [01:12<01:29, 248.38patch/s]     46%|████▌     | 18764/41030 [01:13<01:35, 232.17patch/s]     46%|████▌     | 18828/41030 [01:13<01:33, 236.44patch/s]     46%|████▌     | 18892/41030 [01:13<01:32, 240.59patch/s]     46%|████▌     | 18956/41030 [01:13<01:26, 254.44patch/s]     46%|████▋     | 19020/41030 [01:14<01:23, 263.61patch/s]     47%|████▋     | 19084/41030 [01:14<01:34, 232.58patch/s]     47%|████▋     | 19148/41030 [01:14<01:30, 242.76patch/s]     47%|████▋     | 19212/41030 [01:14<01:22, 264.65patch/s]     47%|████▋     | 19276/41030 [01:15<01:18, 277.96patch/s]     47%|████▋     | 19340/41030 [01:15<01:15, 285.87patch/s]     47%|████▋     | 19404/41030 [01:15<01:26, 248.98patch/s]     47%|████▋     | 19468/41030 [01:15<01:27, 245.69patch/s]     48%|████▊     | 19532/41030 [01:16<01:24, 253.42patch/s]     48%|████▊     | 19596/41030 [01:16<01:24, 252.93patch/s]     48%|████▊     | 19660/41030 [01:16<01:33, 229.57patch/s]     48%|████▊     | 19724/41030 [01:17<01:30, 234.96patch/s]     48%|████▊     | 19788/41030 [01:17<01:29, 237.76patch/s]     48%|████▊     | 19852/41030 [01:17<01:27, 241.27patch/s]     49%|████▊     | 19916/41030 [01:17<01:32, 228.81patch/s]     49%|████▊     | 19980/41030 [01:18<01:24, 248.81patch/s]     49%|████▉     | 20044/41030 [01:18<01:21, 256.46patch/s]     49%|████▉     | 20108/41030 [01:18<01:20, 261.49patch/s]     49%|████▉     | 20172/41030 [01:18<01:21, 257.40patch/s]     49%|████▉     | 20236/41030 [01:19<01:29, 233.64patch/s]     49%|████▉     | 20300/41030 [01:19<01:26, 238.67patch/s]     50%|████▉     | 20364/41030 [01:19<01:19, 259.31patch/s]     50%|████▉     | 20428/41030 [01:19<01:13, 280.00patch/s]     50%|████▉     | 20492/41030 [01:19<01:10, 290.11patch/s]     50%|█████     | 20556/41030 [01:20<01:12, 281.76patch/s]     50%|█████     | 20620/41030 [01:20<01:12, 283.46patch/s]     50%|█████     | 20684/41030 [01:20<01:09, 292.52patch/s]     51%|█████     | 20748/41030 [01:20<01:06, 304.02patch/s]     51%|█████     | 20812/41030 [01:21<01:07, 299.41patch/s]     51%|█████     | 20876/41030 [01:21<01:15, 267.98patch/s]     51%|█████     | 20940/41030 [01:21<01:17, 259.09patch/s]     51%|█████     | 21004/41030 [01:21<01:19, 251.04patch/s]     51%|█████▏    | 21068/41030 [01:22<01:21, 244.09patch/s]     52%|█████▏    | 21132/41030 [01:22<01:31, 216.73patch/s]     52%|█████▏    | 21196/41030 [01:22<01:28, 223.89patch/s]     52%|█████▏    | 21260/41030 [01:23<01:27, 225.15patch/s]     52%|█████▏    | 21324/41030 [01:23<01:26, 227.59patch/s]     52%|█████▏    | 21388/41030 [01:23<01:22, 239.13patch/s]     52%|█████▏    | 21452/41030 [01:23<01:14, 261.24patch/s]     52%|█████▏    | 21516/41030 [01:24<01:18, 248.23patch/s]     53%|█████▎    | 21580/41030 [01:24<01:27, 222.66patch/s]     53%|█████▎    | 21644/41030 [01:24<01:28, 220.10patch/s]     53%|█████▎    | 21708/41030 [01:24<01:22, 233.81patch/s]     53%|█████▎    | 21772/41030 [01:25<01:17, 247.12patch/s]     53%|█████▎    | 21836/41030 [01:25<01:19, 240.66patch/s]     53%|█████▎    | 21900/41030 [01:25<01:16, 250.32patch/s]     54%|█████▎    | 21964/41030 [01:25<01:14, 256.67patch/s]     54%|█████▎    | 22028/41030 [01:26<01:13, 258.67patch/s]     54%|█████▍    | 22092/41030 [01:26<01:12, 260.08patch/s]     54%|█████▍    | 22156/41030 [01:26<01:20, 235.13patch/s]     54%|█████▍    | 22220/41030 [01:27<01:20, 234.41patch/s]     54%|█████▍    | 22284/41030 [01:27<01:19, 234.58patch/s]     54%|█████▍    | 22348/41030 [01:27<01:17, 240.15patch/s]     55%|█████▍    | 22412/41030 [01:27<01:20, 230.30patch/s]     55%|█████▍    | 22476/41030 [01:28<01:20, 231.15patch/s]     55%|█████▍    | 22540/41030 [01:28<01:19, 232.95patch/s]     55%|█████▌    | 22604/41030 [01:28<01:18, 235.92patch/s]     55%|█████▌    | 22668/41030 [01:28<01:21, 226.34patch/s]     55%|█████▌    | 22732/41030 [01:29<01:17, 235.95patch/s]     56%|█████▌    | 22796/41030 [01:29<01:16, 237.30patch/s]     56%|█████▌    | 22860/41030 [01:29<01:15, 241.42patch/s]     56%|█████▌    | 22924/41030 [01:30<01:13, 244.80patch/s]     56%|█████▌    | 22988/41030 [01:30<01:16, 234.73patch/s]     56%|█████▌    | 23052/41030 [01:30<01:14, 241.69patch/s]     56%|█████▋    | 23116/41030 [01:30<01:15, 236.31patch/s]     56%|█████▋    | 23180/41030 [01:31<01:17, 229.92patch/s]     57%|█████▋    | 23244/41030 [01:31<01:14, 238.41patch/s]     57%|█████▋    | 23308/41030 [01:31<01:17, 227.95patch/s]     57%|█████▋    | 23372/41030 [01:31<01:13, 239.22patch/s]     57%|█████▋    | 23436/41030 [01:32<01:08, 256.01patch/s]     57%|█████▋    | 23500/41030 [01:32<01:02, 279.01patch/s]     57%|█████▋    | 23564/41030 [01:32<01:01, 283.91patch/s]     58%|█████▊    | 23628/41030 [01:32<01:06, 262.68patch/s]     58%|█████▊    | 23692/41030 [01:33<01:03, 273.93patch/s]     58%|█████▊    | 23756/41030 [01:33<01:01, 279.69patch/s]     58%|█████▊    | 23820/41030 [01:33<01:06, 257.62patch/s]     58%|█████▊    | 23884/41030 [01:33<01:06, 256.20patch/s]     58%|█████▊    | 23948/41030 [01:34<01:10, 241.53patch/s]     59%|█████▊    | 24012/41030 [01:34<01:05, 259.20patch/s]     59%|█████▊    | 24076/41030 [01:34<01:01, 276.64patch/s]     59%|█████▉    | 24140/41030 [01:34<01:02, 269.64patch/s]     59%|█████▉    | 24204/41030 [01:35<01:04, 262.54patch/s]     59%|█████▉    | 24268/41030 [01:35<01:12, 230.07patch/s]     59%|█████▉    | 24332/41030 [01:35<01:13, 227.68patch/s]     59%|█████▉    | 24396/41030 [01:35<01:13, 227.81patch/s]     60%|█████▉    | 24460/41030 [01:36<01:06, 248.79patch/s]     60%|█████▉    | 24524/41030 [01:36<01:07, 244.96patch/s]     60%|█████▉    | 24588/41030 [01:36<01:03, 259.27patch/s]     60%|██████    | 24652/41030 [01:36<01:02, 261.27patch/s]     60%|██████    | 24716/41030 [01:37<01:02, 260.50patch/s]     60%|██████    | 24780/41030 [01:37<01:00, 267.64patch/s]     61%|██████    | 24844/41030 [01:37<01:04, 251.70patch/s]     61%|██████    | 24908/41030 [01:37<01:07, 240.05patch/s]     61%|██████    | 24972/41030 [01:38<01:09, 231.15patch/s]     61%|██████    | 25036/41030 [01:38<01:10, 226.37patch/s]     61%|██████    | 25100/41030 [01:38<01:14, 214.74patch/s]     61%|██████▏   | 25164/41030 [01:39<01:07, 233.32patch/s]     61%|██████▏   | 25228/41030 [01:39<01:06, 237.37patch/s]     62%|██████▏   | 25292/41030 [01:39<01:06, 238.05patch/s]     62%|██████▏   | 25356/41030 [01:39<01:08, 228.41patch/s]     62%|██████▏   | 25420/41030 [01:40<01:06, 233.66patch/s]     62%|██████▏   | 25484/41030 [01:40<01:06, 232.26patch/s]     62%|██████▏   | 25548/41030 [01:40<01:03, 244.10patch/s]     62%|██████▏   | 25612/41030 [01:40<01:05, 237.00patch/s]     63%|██████▎   | 25676/41030 [01:41<01:00, 252.72patch/s]     63%|██████▎   | 25740/41030 [01:41<00:57, 266.34patch/s]     63%|██████▎   | 25804/41030 [01:41<01:01, 246.20patch/s]     63%|██████▎   | 25868/41030 [01:41<01:04, 235.52patch/s]     63%|██████▎   | 25932/41030 [01:42<01:10, 212.84patch/s]     63%|██████▎   | 25996/41030 [01:42<01:09, 216.42patch/s]     64%|██████▎   | 26060/41030 [01:42<01:07, 220.54patch/s]     64%|██████▎   | 26124/41030 [01:43<01:06, 223.57patch/s]     64%|██████▍   | 26188/41030 [01:43<01:10, 211.73patch/s]     64%|██████▍   | 26252/41030 [01:43<01:05, 224.05patch/s]     64%|██████▍   | 26316/41030 [01:44<01:01, 237.54patch/s]     64%|██████▍   | 26380/41030 [01:44<00:58, 251.08patch/s]     64%|██████▍   | 26444/41030 [01:44<00:58, 250.80patch/s]     65%|██████▍   | 26508/41030 [01:44<01:02, 233.44patch/s]     65%|██████▍   | 26572/41030 [01:45<01:00, 239.21patch/s]     65%|██████▍   | 26636/41030 [01:45<01:00, 238.65patch/s]     65%|██████▌   | 26700/41030 [01:45<00:59, 240.00patch/s]     65%|██████▌   | 26764/41030 [01:45<01:03, 224.77patch/s]     65%|██████▌   | 26828/41030 [01:46<00:58, 241.28patch/s]     66%|██████▌   | 26892/41030 [01:46<00:57, 247.85patch/s]     66%|██████▌   | 26956/41030 [01:46<00:54, 255.94patch/s]     66%|██████▌   | 27020/41030 [01:46<00:55, 253.24patch/s]     66%|██████▌   | 27084/41030 [01:47<01:01, 228.13patch/s]     66%|██████▌   | 27148/41030 [01:47<01:03, 218.49patch/s]     66%|██████▋   | 27212/41030 [01:47<01:01, 224.40patch/s]     66%|██████▋   | 27276/41030 [01:48<00:59, 230.85patch/s]     67%|██████▋   | 27340/41030 [01:48<00:56, 242.59patch/s]     67%|██████▋   | 27404/41030 [01:48<00:54, 249.87patch/s]     67%|██████▋   | 27468/41030 [01:48<00:53, 251.84patch/s]     67%|██████▋   | 27532/41030 [01:49<00:51, 260.20patch/s]     67%|██████▋   | 27596/41030 [01:49<00:51, 262.71patch/s]     67%|██████▋   | 27660/41030 [01:49<00:56, 234.92patch/s]     68%|██████▊   | 27724/41030 [01:49<00:57, 230.10patch/s]     68%|██████▊   | 27788/41030 [01:50<00:57, 228.41patch/s]     68%|██████▊   | 27852/41030 [01:50<01:00, 218.69patch/s]     68%|██████▊   | 27916/41030 [01:50<01:04, 204.70patch/s]     68%|██████▊   | 27980/41030 [01:51<01:04, 203.48patch/s]     68%|██████▊   | 28044/41030 [01:51<01:02, 207.43patch/s]     69%|██████▊   | 28108/41030 [01:51<00:56, 227.98patch/s]     69%|██████▊   | 28172/41030 [01:52<01:00, 210.86patch/s]     69%|██████▉   | 28236/41030 [01:52<01:02, 203.72patch/s]     69%|██████▉   | 28300/41030 [01:52<00:59, 212.68patch/s]     69%|██████▉   | 28364/41030 [01:52<00:57, 219.68patch/s]     69%|██████▉   | 28428/41030 [01:53<00:57, 220.05patch/s]     69%|██████▉   | 28492/41030 [01:53<00:53, 235.77patch/s]     70%|██████▉   | 28556/41030 [01:53<00:52, 238.13patch/s]     70%|██████▉   | 28620/41030 [01:54<00:56, 221.37patch/s]     70%|██████▉   | 28684/41030 [01:54<01:02, 198.92patch/s]     70%|███████   | 28748/41030 [01:54<01:02, 195.42patch/s]     70%|███████   | 28812/41030 [01:55<01:03, 192.88patch/s]     70%|███████   | 28876/41030 [01:55<01:07, 180.55patch/s]     71%|███████   | 28940/41030 [01:55<01:05, 184.54patch/s]     71%|███████   | 29004/41030 [01:56<01:03, 189.74patch/s]     71%|███████   | 29068/41030 [01:56<01:00, 199.19patch/s]     71%|███████   | 29132/41030 [01:56<01:01, 194.17patch/s]     71%|███████   | 29196/41030 [01:56<00:54, 219.01patch/s]     71%|███████▏  | 29260/41030 [01:57<00:49, 239.83patch/s]     71%|███████▏  | 29324/41030 [01:57<00:46, 249.70patch/s]     72%|███████▏  | 29388/41030 [01:57<00:45, 254.06patch/s]     72%|███████▏  | 29452/41030 [01:57<00:48, 238.21patch/s]     72%|███████▏  | 29516/41030 [01:58<00:49, 233.03patch/s]     72%|███████▏  | 29580/41030 [01:58<00:49, 231.31patch/s]     72%|███████▏  | 29644/41030 [01:58<00:47, 242.15patch/s]     72%|███████▏  | 29708/41030 [01:59<00:49, 228.43patch/s]     73%|███████▎  | 29772/41030 [01:59<00:47, 236.10patch/s]     73%|███████▎  | 29836/41030 [01:59<00:48, 233.15patch/s]     73%|███████▎  | 29900/41030 [01:59<00:47, 235.51patch/s]     73%|███████▎  | 29964/41030 [02:00<00:47, 230.77patch/s]     73%|███████▎  | 30028/41030 [02:00<00:45, 243.35patch/s]     73%|███████▎  | 30092/41030 [02:00<00:49, 221.93patch/s]     73%|███████▎  | 30156/41030 [02:01<00:48, 226.42patch/s]     74%|███████▎  | 30220/41030 [02:01<00:49, 217.79patch/s]     74%|███████▍  | 30284/41030 [02:01<00:46, 229.69patch/s]     74%|███████▍  | 30348/41030 [02:01<00:44, 239.94patch/s]     74%|███████▍  | 30412/41030 [02:02<00:42, 252.24patch/s]     74%|███████▍  | 30476/41030 [02:02<00:41, 252.42patch/s]     74%|███████▍  | 30540/41030 [02:02<00:47, 218.83patch/s]     75%|███████▍  | 30604/41030 [02:02<00:47, 219.52patch/s]     75%|███████▍  | 30668/41030 [02:03<00:47, 220.40patch/s]     75%|███████▍  | 30732/41030 [02:03<00:49, 209.17patch/s]     75%|███████▌  | 30796/41030 [02:04<00:54, 189.33patch/s]     75%|███████▌  | 30860/41030 [02:04<00:51, 197.18patch/s]     75%|███████▌  | 30924/41030 [02:04<00:49, 202.68patch/s]     76%|███████▌  | 30988/41030 [02:04<00:48, 208.26patch/s]     76%|███████▌  | 31052/41030 [02:05<00:49, 201.25patch/s]     76%|███████▌  | 31116/41030 [02:05<00:47, 208.46patch/s]     76%|███████▌  | 31180/41030 [02:05<00:47, 208.40patch/s]     76%|███████▌  | 31244/41030 [02:06<00:45, 213.00patch/s]     76%|███████▋  | 31308/41030 [02:06<00:44, 217.41patch/s]     76%|███████▋  | 31372/41030 [02:06<00:44, 214.82patch/s]     77%|███████▋  | 31436/41030 [02:07<00:45, 212.77patch/s]     77%|███████▋  | 31500/41030 [02:07<00:43, 218.98patch/s]     77%|███████▋  | 31564/41030 [02:07<00:44, 213.08patch/s]     77%|███████▋  | 31628/41030 [02:07<00:40, 229.40patch/s]     77%|███████▋  | 31692/41030 [02:08<00:43, 217.03patch/s]     77%|███████▋  | 31756/41030 [02:08<00:46, 198.98patch/s]     78%|███████▊  | 31820/41030 [02:08<00:45, 203.49patch/s]     78%|███████▊  | 31884/41030 [02:09<00:41, 219.21patch/s]     78%|███████▊  | 31948/41030 [02:09<00:39, 231.74patch/s]     78%|███████▊  | 32012/41030 [02:09<00:37, 238.09patch/s]     78%|███████▊  | 32076/41030 [02:09<00:37, 236.54patch/s]     78%|███████▊  | 32140/41030 [02:10<00:41, 215.01patch/s]     78%|███████▊  | 32204/41030 [02:10<00:41, 214.61patch/s]     79%|███████▊  | 32268/41030 [02:10<00:41, 210.95patch/s]     79%|███████▉  | 32332/41030 [02:11<00:41, 211.15patch/s]     79%|███████▉  | 32396/41030 [02:11<00:42, 204.41patch/s]     79%|███████▉  | 32460/41030 [02:11<00:38, 220.90patch/s]     79%|███████▉  | 32524/41030 [02:11<00:36, 234.63patch/s]     79%|███████▉  | 32588/41030 [02:12<00:36, 233.24patch/s]     80%|███████▉  | 32652/41030 [02:12<00:38, 220.20patch/s]     80%|███████▉  | 32716/41030 [02:12<00:38, 216.88patch/s]     80%|███████▉  | 32780/41030 [02:13<00:39, 210.96patch/s]     80%|████████  | 32844/41030 [02:13<00:40, 202.59patch/s]     80%|████████  | 32908/41030 [02:13<00:40, 202.40patch/s]     80%|████████  | 32972/41030 [02:14<00:37, 216.69patch/s]     81%|████████  | 33036/41030 [02:14<00:34, 229.50patch/s]     81%|████████  | 33100/41030 [02:14<00:33, 238.26patch/s]     81%|████████  | 33164/41030 [02:14<00:32, 240.45patch/s]     81%|████████  | 33228/41030 [02:15<00:33, 230.70patch/s]     81%|████████  | 33292/41030 [02:15<00:31, 244.55patch/s]     81%|████████▏ | 33356/41030 [02:15<00:33, 227.24patch/s]     81%|████████▏ | 33420/41030 [02:15<00:33, 224.84patch/s]     82%|████████▏ | 33484/41030 [02:16<00:36, 208.36patch/s]     82%|████████▏ | 33548/41030 [02:16<00:35, 208.74patch/s]     82%|████████▏ | 33612/41030 [02:16<00:34, 213.89patch/s]     82%|████████▏ | 33676/41030 [02:17<00:32, 225.47patch/s]     82%|████████▏ | 33740/41030 [02:17<00:32, 220.93patch/s]     82%|████████▏ | 33804/41030 [02:17<00:34, 211.19patch/s]     83%|████████▎ | 33868/41030 [02:18<00:35, 201.19patch/s]     83%|████████▎ | 33932/41030 [02:18<00:35, 198.36patch/s]     83%|████████▎ | 33996/41030 [02:18<00:36, 194.38patch/s]     83%|████████▎ | 34060/41030 [02:19<00:33, 207.74patch/s]     83%|████████▎ | 34124/41030 [02:19<00:32, 212.39patch/s]     83%|████████▎ | 34188/41030 [02:19<00:31, 217.42patch/s]     83%|████████▎ | 34252/41030 [02:20<00:33, 201.33patch/s]     84%|████████▎ | 34316/41030 [02:20<00:32, 205.53patch/s]     84%|████████▍ | 34380/41030 [02:20<00:30, 215.81patch/s]     84%|████████▍ | 34444/41030 [02:20<00:29, 219.81patch/s]     84%|████████▍ | 34508/41030 [02:21<00:31, 206.04patch/s]     84%|████████▍ | 34572/41030 [02:21<00:29, 215.28patch/s]     84%|████████▍ | 34636/41030 [02:21<00:28, 220.86patch/s]     85%|████████▍ | 34700/41030 [02:22<00:27, 233.90patch/s]     85%|████████▍ | 34764/41030 [02:22<00:27, 229.53patch/s]     85%|████████▍ | 34828/41030 [02:22<00:26, 234.48patch/s]     85%|████████▌ | 34892/41030 [02:22<00:26, 228.49patch/s]     85%|████████▌ | 34956/41030 [02:23<00:27, 218.88patch/s]     85%|████████▌ | 35020/41030 [02:23<00:29, 202.76patch/s]     86%|████████▌ | 35084/41030 [02:23<00:29, 201.36patch/s]     86%|████████▌ | 35148/41030 [02:24<00:29, 200.76patch/s]     86%|████████▌ | 35212/41030 [02:24<00:28, 201.70patch/s]     86%|████████▌ | 35276/41030 [02:24<00:28, 199.25patch/s]     86%|████████▌ | 35340/41030 [02:25<00:26, 215.61patch/s]     86%|████████▋ | 35404/41030 [02:25<00:23, 238.45patch/s]     86%|████████▋ | 35468/41030 [02:25<00:21, 257.36patch/s]     87%|████████▋ | 35532/41030 [02:25<00:19, 283.55patch/s]     87%|████████▋ | 35596/41030 [02:25<00:20, 260.53patch/s]     87%|████████▋ | 35660/41030 [02:26<00:21, 247.14patch/s]     87%|████████▋ | 35724/41030 [02:26<00:22, 237.99patch/s]     87%|████████▋ | 35788/41030 [02:26<00:22, 238.27patch/s]     87%|████████▋ | 35852/41030 [02:27<00:23, 224.01patch/s]     88%|████████▊ | 35916/41030 [02:27<00:22, 228.49patch/s]     88%|████████▊ | 35980/41030 [02:27<00:21, 233.02patch/s]     88%|████████▊ | 36044/41030 [02:27<00:20, 239.29patch/s]     88%|████████▊ | 36108/41030 [02:28<00:22, 216.57patch/s]     88%|████████▊ | 36172/41030 [02:28<00:22, 217.62patch/s]     88%|████████▊ | 36236/41030 [02:28<00:20, 230.51patch/s]     88%|████████▊ | 36300/41030 [02:29<00:19, 240.52patch/s]     89%|████████▊ | 36364/41030 [02:29<00:20, 230.08patch/s]     89%|████████▉ | 36428/41030 [02:29<00:19, 240.01patch/s]     89%|████████▉ | 36492/41030 [02:29<00:18, 248.80patch/s]     89%|████████▉ | 36556/41030 [02:30<00:18, 245.39patch/s]     89%|████████▉ | 36620/41030 [02:30<00:18, 243.46patch/s]     89%|████████▉ | 36684/41030 [02:30<00:18, 238.71patch/s]     90%|████████▉ | 36748/41030 [02:30<00:17, 247.31patch/s]     90%|████████▉ | 36812/41030 [02:31<00:16, 252.05patch/s]     90%|████████▉ | 36876/41030 [02:31<00:16, 244.88patch/s]     90%|█████████ | 36940/41030 [02:31<00:16, 241.46patch/s]     90%|█████████ | 37004/41030 [02:31<00:17, 231.51patch/s]     90%|█████████ | 37068/41030 [02:32<00:16, 243.37patch/s]     90%|█████████ | 37132/41030 [02:32<00:15, 256.09patch/s]     91%|█████████ | 37196/41030 [02:32<00:14, 257.26patch/s]     91%|█████████ | 37260/41030 [02:32<00:14, 255.67patch/s]     91%|█████████ | 37324/41030 [02:33<00:14, 254.38patch/s]     91%|█████████ | 37388/41030 [02:33<00:13, 271.38patch/s]     91%|█████████▏| 37452/41030 [02:33<00:13, 258.04patch/s]     91%|█████████▏| 37516/41030 [02:33<00:13, 254.39patch/s]     92%|█████████▏| 37580/41030 [02:34<00:13, 262.97patch/s]     92%|█████████▏| 37644/41030 [02:34<00:13, 245.76patch/s]     92%|█████████▏| 37708/41030 [02:34<00:13, 251.84patch/s]     92%|█████████▏| 37772/41030 [02:34<00:12, 256.79patch/s]     92%|█████████▏| 37836/41030 [02:35<00:12, 259.90patch/s]     92%|█████████▏| 37900/41030 [02:35<00:11, 262.40patch/s]     93%|█████████▎| 37964/41030 [02:35<00:12, 238.72patch/s]     93%|█████████▎| 38028/41030 [02:35<00:12, 237.70patch/s]     93%|█████████▎| 38092/41030 [02:36<00:11, 248.00patch/s]     93%|█████████▎| 38156/41030 [02:36<00:11, 256.03patch/s]     93%|█████████▎| 38220/41030 [02:36<00:10, 260.22patch/s]     93%|█████████▎| 38284/41030 [02:36<00:11, 247.05patch/s]     93%|█████████▎| 38348/41030 [02:37<00:10, 262.44patch/s]     94%|█████████▎| 38412/41030 [02:37<00:10, 260.27patch/s]     94%|█████████▍| 38476/41030 [02:37<00:09, 257.78patch/s]     94%|█████████▍| 38540/41030 [02:37<00:09, 267.60patch/s]     94%|█████████▍| 38604/41030 [02:38<00:09, 268.86patch/s]     94%|█████████▍| 38668/41030 [02:38<00:08, 273.75patch/s]     94%|█████████▍| 38732/41030 [02:38<00:08, 262.63patch/s]     95%|█████████▍| 38796/41030 [02:38<00:08, 250.21patch/s]     95%|█████████▍| 38860/41030 [02:39<00:09, 238.91patch/s]     95%|█████████▍| 38924/41030 [02:39<00:08, 251.40patch/s]     95%|█████████▌| 38988/41030 [02:39<00:07, 264.36patch/s]     95%|█████████▌| 39052/41030 [02:39<00:07, 273.75patch/s]     95%|█████████▌| 39116/41030 [02:40<00:06, 284.25patch/s]     95%|█████████▌| 39180/41030 [02:40<00:07, 246.26patch/s]     96%|█████████▌| 39244/41030 [02:40<00:07, 244.36patch/s]     96%|█████████▌| 39308/41030 [02:40<00:06, 252.35patch/s]     96%|█████████▌| 39372/41030 [02:41<00:06, 257.70patch/s]     96%|█████████▌| 39436/41030 [02:41<00:06, 234.08patch/s]     96%|█████████▋| 39500/41030 [02:41<00:06, 244.89patch/s]     96%|█████████▋| 39564/41030 [02:41<00:05, 258.30patch/s]     97%|█████████▋| 39628/41030 [02:42<00:05, 260.68patch/s]     97%|█████████▋| 39692/41030 [02:42<00:05, 262.07patch/s]     97%|█████████▋| 39756/41030 [02:42<00:04, 256.96patch/s]     97%|█████████▋| 39820/41030 [02:42<00:04, 257.00patch/s]     97%|█████████▋| 39884/41030 [02:43<00:04, 262.01patch/s]     97%|█████████▋| 39948/41030 [02:43<00:04, 269.32patch/s]     98%|█████████▊| 40012/41030 [02:43<00:03, 275.86patch/s]     98%|█████████▊| 40076/41030 [02:43<00:03, 257.03patch/s]     98%|█████████▊| 40140/41030 [02:44<00:03, 252.22patch/s]     98%|█████████▊| 40204/41030 [02:44<00:03, 266.46patch/s]     98%|█████████▊| 40268/41030 [02:44<00:02, 278.62patch/s]     98%|█████████▊| 40332/41030 [02:44<00:02, 290.70patch/s]     98%|█████████▊| 40396/41030 [02:44<00:02, 280.40patch/s]     99%|█████████▊| 40460/41030 [02:45<00:02, 278.97patch/s]     99%|█████████▉| 40524/41030 [02:45<00:01, 286.97patch/s]     99%|█████████▉| 40588/41030 [02:45<00:01, 294.32patch/s]     99%|█████████▉| 40652/41030 [02:45<00:01, 299.44patch/s]     99%|█████████▉| 40716/41030 [02:46<00:01, 277.90patch/s]     99%|█████████▉| 40780/41030 [02:46<00:00, 273.23patch/s]    100%|█████████▉| 40844/41030 [02:46<00:00, 269.18patch/s]    100%|█████████▉| 40908/41030 [02:46<00:00, 267.21patch/s]    100%|█████████▉| 40972/41030 [02:47<00:00, 271.19patch/s]    100%|██████████| 41030/41030 [02:47<00:00, 245.58patch/s]




.. GENERATED FROM PYTHON SOURCE LINES 218-219

If everything went as planned, executing the cell below will plot the result.

.. GENERATED FROM PYTHON SOURCE LINES 219-242

.. code-block:: Python


    # For clarity, only show positive RSA scores
    stc_rsa[0].data[stc_rsa[0].data < 0] = 0
    stc_rsa[1].data[stc_rsa[1].data < 0] = 0

    # Show the RSA maps for both the pixel and FaceNet RDMs
    brain_pixels = stc_rsa[0].plot(
        "sub-02",
        subjects_dir=f"{data_path}/freesurfer",
        hemi="both",
        initial_time=0.081,
        views="ventral",
        title="pixels",
    )
    brain_facenet = stc_rsa[1].plot(
        "sub-02",
        subjects_dir=f"{data_path}/freesurfer",
        hemi="both",
        initial_time=0.180,
        views="parietal",
        title="FaceNet",
    )




.. image-sg:: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_002.png
   :alt: 02 source level tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_002.png
   :class: sphx-glr-single-img

.. image-sg:: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_003.png
   :alt: 02 source level tutorial
   :srcset: /auto_examples/tutorials/images/sphx_glr_02_source_level_tutorial_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 243-246

If you’ve made it this far, you have successfully completed your first source-level
RSA! 🎉 This is the end of this tutorial. In the next tutorial, we will discuss
group-level analysis and statistics: :ref:`tut-statistics`.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 10.770 seconds)


.. _sphx_glr_download_auto_examples_tutorials_02_source_level_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 02_source_level_tutorial.ipynb <02_source_level_tutorial.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 02_source_level_tutorial.py <02_source_level_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 02_source_level_tutorial.zip <02_source_level_tutorial.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
