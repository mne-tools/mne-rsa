
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sensor_level/plot_sensor_rdms.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_sensor_level_plot_sensor_rdms.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sensor_level_plot_sensor_rdms.py:


Plot sensor-level RDMs
----------------------

This example demonstrates how to visualize representational dissimilarity matrices
(RDMs) computed from EEG data. We will compute them using a spatial searchlight and plot
the RDM computed for each searchlight-patch.

| Authors:
| Marijn van Vliet <marijn.vanvliet@aalto.fi>

.. GENERATED FROM PYTHON SOURCE LINES 15-21

.. code-block:: Python


    # Import required packages
    import numpy as np
    import mne
    import mne_rsa








.. GENERATED FROM PYTHON SOURCE LINES 22-27

MNE-Python contains a built-in data loader for the kiloword dataset. We use it here to
read it as 960 epochs. Each epoch represents the brain response to a single word,
averaged across all the participants. For this example, we speed up the computation,
at a cost of temporal precision, by downsampling the data from the original 250 Hz. to
100 Hz.

.. GENERATED FROM PYTHON SOURCE LINES 27-32

.. code-block:: Python


    data_path = mne.datasets.kiloword.data_path(verbose=True)
    epochs = mne.read_epochs(data_path / "kword_metadata-epo.fif")
    epochs = epochs.resample(100)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Reading /home/runner/mne_data/MNE-kiloword-data/kword_metadata-epo.fif ...
    Isotrak not found
        Found the data of interest:
            t =    -100.00 ...     920.00 ms
            0 CTF compensation matrices available
    Adding metadata with 8 columns
    960 matching events found
    No baseline correction applied
    0 projection items activated




.. GENERATED FROM PYTHON SOURCE LINES 33-34

We now compute RDMs using a spatial searchlight with a radius of 45 centimeters.

.. GENERATED FROM PYTHON SOURCE LINES 34-51

.. code-block:: Python


    # This will create a generator for the RDMs
    rdms = mne_rsa.rdm_epochs(
        epochs,  # The EEG data
        dist_metric="correlation",  # Metric to compute the EEG RDMs
        spatial_radius=45,  # Spatial radius of the searchlight patch
        temporal_radius=None,  # Perform only spatial searchlight
        tmin=0.15,
        tmax=0.25,  # To save time, only analyze this time interval
        n_jobs=1,  # Use this to specify the number of CPU cores to use
    )

    # Unpack the generator into a NumPy array so we can plot it
    rdms = np.array(list(rdms))

    # Visualize the RDMs.
    mne_rsa.viz.plot_rdms_topo(rdms, epochs.info, cmap="magma")



.. image-sg:: /auto_examples/sensor_level/images/sphx_glr_plot_sensor_rdms_001.png
   :alt: Time point: 0
   :srcset: /auto_examples/sensor_level/images/sphx_glr_plot_sensor_rdms_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Creating spatial searchlight patches

    <Figure size 640x480 with 29 Axes>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.912 seconds)


.. _sphx_glr_download_auto_examples_sensor_level_plot_sensor_rdms.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sensor_rdms.ipynb <plot_sensor_rdms.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sensor_rdms.py <plot_sensor_rdms.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_sensor_rdms.zip <plot_sensor_rdms.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
